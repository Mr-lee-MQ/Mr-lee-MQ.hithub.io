<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CSS3</title>
    <url>/Mr-lee-MQ.hithub.io/2020/07/15/CSS3/</url>
    <content><![CDATA[<h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS<a id="more"></a></h1><h2 id="发展史"><a href="#发展史" class="headerlink" title="发展史"></a>发展史</h2><ul>
<li>CSS1.0</li>
<li>CSS2.0   DIV（块） +   CSS，HTML 和CSS结构分离的思想，网页变得简单，SEO</li>
<li>CSS2.1   浮动，定位</li>
<li>CSS3.0   圆角，阴影，动画    浏览器兼容性</li>
</ul>
<h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><ul>
<li>style    存放CSS代码<ul>
<li>选择器{ 声明1；声明2…….   }</li>
<li>单独写一个CSS文件，在HTML中用link引入</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">     我是标题</span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"CSS/CSS1.css"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: aquamarine;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="CSS的优势"><a href="#CSS的优势" class="headerlink" title="CSS的优势"></a>CSS的优势</h2><ul>
<li>内容和表现分离</li>
<li>网页结构表现统一，可以实现复用</li>
<li>样式十分的丰富</li>
<li>建立使用独立于html的css文件</li>
<li>利用SEO，容易被搜索引擎收录</li>
</ul>
<h2 id="CSS的四种引入方式"><a href="#CSS的四种引入方式" class="headerlink" title="CSS的四种引入方式"></a>CSS的四种引入方式</h2><p>优先级：就近原则，谁离代码近，谁的优先级越高</p>
<ul>
<li>行内样式：在元素标签中，编写一个style属性，编写样式即可</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">"color: red"</span> &gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>内部样式：</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    h1 &#123;</span><br><span class="line">       color: pink;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>外部样式</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">     我是标题</span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"CSS/CSS1.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">h1&#123;</span><br><span class="line">    color: aquamarine;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>拓展：外部样式两种写法</p>
<ul>
<li>链接式</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">     我是标题</span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"CSS/CSS1.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">h1&#123;</span><br><span class="line">    color: aquamarine;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>导入式</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="keyword">@import</span> url <span class="string">"CSS/CSS1.css"</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>lalalal<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">h1&#123;</span><br><span class="line">    color: aquamarine;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><p>作用：选择页面上的某一个或者某一类元素</p>
<h3 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h3><p>不遵循就近原则。id选择器&gt;类选择器&gt;标签选择器</p>
<ul>
<li>标签选择器：选择同种类型标签，只能对同一类标签进行操作</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    h1&#123;</span><br><span class="line">        color: pink;</span><br><span class="line">    &#125;</span><br><span class="line">    p&#123;</span><br><span class="line">        color: aqua;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">    第一行</span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">    第二行</span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  第三行</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>类选择器： （.class名称{})      为标签定义class    可以多个标签归类，是同一个class，可以复用。</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.one</span>&#123;</span></span><br><span class="line">        color: aqua;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.two</span>&#123;</span></span><br><span class="line">        color: pink;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.three</span>&#123;</span></span><br><span class="line">        color: red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"two"</span>&gt;</span></span><br><span class="line">    第二行</span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"three"</span>&gt;</span></span><br><span class="line">    第三行</span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"one"</span>&gt;</span></span><br><span class="line">    第一行</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>id选择器：    (#id名称{})     id保证全局唯一</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#abc</span>&#123;</span></span><br><span class="line">        color: red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#bca</span>&#123;</span></span><br><span class="line">        color: pink;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#cba</span>&#123;</span></span><br><span class="line">        color: aqua;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"abc"</span>&gt;</span>第一行<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"bca"</span>&gt;</span>第一行<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"cba"</span>&gt;</span>第一行<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="层次选择器"><a href="#层次选择器" class="headerlink" title="层次选择器"></a>层次选择器</h3><ul>
<li>后代选择器：在某个元素的后面。<ul>
<li>body（层次） 标签{    }</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    body h1&#123;</span><br><span class="line">        color: pink;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>子选择器：只有一代（仅下一个层次）<ul>
<li>body（层次）&gt;标签{      }</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    body &gt;h1&#123;</span><br><span class="line">        color: aqua;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>相邻兄弟选择器：同一层次，只有一个（仅对下）</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.active</span> +<span class="selector-tag">h1</span>&#123;</span></span><br><span class="line">        color: red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>.（class值） +  标签{         }</p>
</li>
<li><p>通用兄弟选择器：同一层次，向下所有</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.active</span>~ <span class="selector-tag">h1</span>&#123;</span></span><br><span class="line">        color: red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>.(class值) ~  标签{        }</li>
</ul>
<h3 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h3><p>伪类：条件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">选取第一个li元素</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span>&#123;</span></span><br><span class="line">            background: red;</span><br><span class="line">        &#125;</span><br><span class="line">选取最后一个li元素</span><br><span class="line"><span class="css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>&#123;</span></span><br><span class="line">            background: aqua;</span><br><span class="line">        &#125;</span><br><span class="line">选中第一个p元素</span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="selector-tag">p</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</span></span><br><span class="line">       background: red;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">P</span>&gt;</span>第一行<span class="tag">&lt;/<span class="name">P</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">P</span>&gt;</span>第二行<span class="tag">&lt;/<span class="name">P</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">P</span>&gt;</span>第三行<span class="tag">&lt;/<span class="name">P</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>122o<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>2ih<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>3pkom<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.damo</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            display: block;</span><br><span class="line">            height: 50px;</span><br><span class="line">            width: 50px;</span><br><span class="line">            border-radius: 10px;</span><br><span class="line">            background: aquamarine;</span><br><span class="line">            text-align: center;</span><br><span class="line">            color: pink;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">            margin-right: 5px;</span><br><span class="line">            font: bold 20px/52px Arial;</span><br><span class="line">        &#125;</span><br><span class="line">        /* 属性值，属性值 = 属性值（正则）</span><br><span class="line">        =绝对等于</span><br><span class="line">        *=包含这个元素</span><br><span class="line">        ^=以这个开头</span><br><span class="line">        $=以这个结尾</span><br><span class="line">         */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        /*</span><br><span class="line">        存在id属性的元素   a[]&#123;&#125;*/</span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-attr">[id]</span>&#123;</span></span><br><span class="line">            background: aqua;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/*id=first的元素*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-attr">[id=first]</span>&#123;</span></span><br><span class="line">            background: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/*class中有links的元素*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-attr">[class*=<span class="string">"links"</span>]</span>&#123;</span></span><br><span class="line">            background: antiquewhite;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/*选中href中以http开头的元素*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-attr">[href^=http]</span>&#123;</span></span><br><span class="line">            background: cornflowerblue;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/*选中href中以为jpg结尾的元素*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-attr">[href$=jpg]</span>&#123;</span></span><br><span class="line">            background: cyan;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"damo"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span><span class="attr">class</span>=<span class="string">"links check-menu-item first"</span><span class="attr">id</span>=<span class="string">"first"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://blog.kuangstudy.com"</span><span class="attr">class</span>=<span class="string">"links item active"</span><span class="attr">target</span>=<span class="string">"_blank"</span><span class="attr">title</span>=<span class="string">"text"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"images/123.html"</span><span class="attr">class</span>=<span class="string">"links item"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"images/123.png"</span><span class="attr">class</span>=<span class="string">"links item"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"images/123.jpg"</span><span class="attr">class</span>=<span class="string">"links item"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"abc"</span><span class="attr">class</span>=<span class="string">"links item"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/a.pdf"</span><span class="attr">class</span>=<span class="string">"links item"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/abc.pdf"</span><span class="attr">class</span>=<span class="string">"links item"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"abc.doc"</span><span class="attr">class</span>=<span class="string">"links item"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"abcd.doc"</span><span class="attr">class</span>=<span class="string">"links item last"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="美化网页元素"><a href="#美化网页元素" class="headerlink" title="美化网页元素"></a>美化网页元素</h2><h3 id="为什么要美化网页"><a href="#为什么要美化网页" class="headerlink" title="为什么要美化网页"></a>为什么要美化网页</h3><ul>
<li>有效的传递页面信息</li>
<li>美化页面，页面漂亮，才能吸引用户</li>
<li>凸显页面主题</li>
<li>提高用户的体验</li>
</ul>
<p>span标签:重点突出的字，用span套起来。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#sp</span> &#123;</span></span><br><span class="line">            font-size: 20px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">欢迎学习<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"sp"</span>&gt;</span>JAVA<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h3><ul>
<li>font-family: “Adobe 楷体 Std R”;       字体风格</li>
<li>font-size: 20px;        字号</li>
<li>font-weight: 100;      字体粗细</li>
<li>color: aqua;          字体颜色</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">       body&#123;</span><br><span class="line">           font-family: "Adobe 楷体 Std R";</span><br><span class="line">           font-size: 20px;</span><br><span class="line">           &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.zw</span>&#123;</span></span><br><span class="line">          color: aqua;</span><br><span class="line">            font-weight: 100;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"zw"</span>&gt;</span>正文第一段<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h3><ul>
<li><p>颜色   color</p>
<ul>
<li>单词</li>
<li>RGB  0~F</li>
<li>RGBA     A：透明度   0~1</li>
</ul>
</li>
<li><p>对齐的方式   text-align   </p>
<ul>
<li>center    排版，居中</li>
</ul>
</li>
<li><p>首行缩进</p>
<ul>
<li>text-indent：2em；  段落首行缩进2字母    </li>
</ul>
</li>
<li><p>行高</p>
<ul>
<li>hight    块的高度 </li>
<li>line-height     行高</li>
<li>块的高度和行高相同，就可以上下居中</li>
</ul>
</li>
<li><p>装饰  text-decoration</p>
<ul>
<li>下划线    underline</li>
<li>中划线     line-through</li>
<li>上划线      overline</li>
<li>超链接去下划线      a   { text-decoration :    none}</li>
</ul>
</li>
<li><p>文本图片水平对齐    参照物 a，b</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    a,b&#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">vertical-align</span><span class="selector-pseudo">:middle</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="文本阴影和超链接伪类"><a href="#文本阴影和超链接伪类" class="headerlink" title="文本阴影和超链接伪类"></a>文本阴影和超链接伪类</h3><ul>
<li>超链接去下划线      </li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">text-decoration：none            </span><br><span class="line">color:#000;</span><br></pre></td></tr></table></figure>

<ul>
<li>鼠标悬浮状态</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">	<span class="attribute">color</span>:orange;</span><br><span class="line">	<span class="attribute">font-size</span>:<span class="number">50px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>鼠标按住未释放的状态</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:<span class="number">#ff008a</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>阴影颜色(阴影颜色，水平偏移，垂直偏移，阴影半径)</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">text-shadow:#3cc7f5 10px 10px  2px</span><br></pre></td></tr></table></figure>

<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><ul>
<li>去掉列表前的点</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">list-style</span>: <span class="selector-tag">none</span>	去掉原点</span><br><span class="line">			<span class="selector-tag">circle</span>	空心圆</span><br><span class="line">			<span class="selector-tag">decimal</span>	数字</span><br><span class="line">			<span class="selector-tag">square</span>	正方形</span><br></pre></td></tr></table></figure>

<h3 id="背景图像应用及渐变"><a href="#背景图像应用及渐变" class="headerlink" title="背景图像应用及渐变"></a>背景图像应用及渐变</h3><ul>
<li>背景图片</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background-image</span><span class="selector-pseudo">:url("</span>    ");图片地址</span><br><span class="line"><span class="selector-tag">background-repeat</span><span class="selector-pseudo">:repeat-x</span>    在<span class="selector-tag">x</span>轴上平铺</span><br><span class="line"><span class="selector-tag">background-repeat</span><span class="selector-pseudo">:repeat-y</span>	  在<span class="selector-tag">y</span>轴上平铺</span><br><span class="line"><span class="selector-tag">background-repeat</span><span class="selector-pseudo">:none-repeat</span> 不平铺</span><br></pre></td></tr></table></figure>

<ul>
<li>颜色，图片，图片位置</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">red</span> <span class="selector-tag">url</span>("    ") 250<span class="selector-tag">px</span>,100<span class="selector-tag">px</span> <span class="selector-tag">no-repeat</span></span><br></pre></td></tr></table></figure>

<ul>
<li>渐变</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background-color</span>:<span class="selector-id">#21D4FD</span>;</span><br><span class="line"><span class="selector-tag">background-image</span><span class="selector-pseudo">:linear-gradient(19deg</span>,<span class="selector-id">#21D4FD</span> 0%，<span class="selector-id">#B721FF</span> 100%);</span><br></pre></td></tr></table></figure>

<h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><ul>
<li><p>#box   {  }</p>
</li>
<li><p>margin：外边距  （body有默认的外边距）</p>
</li>
<li><p>padding：内边距</p>
</li>
<li><p>border：边框      border：1px,solid,red;</p>
<ul>
<li>边框的粗细（width）</li>
<li>边框的样式（solid虚线      deshed实线）</li>
<li>边框的颜色</li>
</ul>
</li>
</ul>
<h3 id="内外边距及div居中"><a href="#内外边距及div居中" class="headerlink" title="内外边距及div居中"></a>内外边距及div居中</h3><p>盒子的计算方式：margin + border + padding + 内容宽度</p>
<ul>
<li>内外边距   上右下左（顺时针）</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">padding</span><span class="selector-pseudo">:0</span> 0 0 0;(上右下左)</span><br><span class="line"><span class="selector-tag">margin</span><span class="selector-pseudo">:0</span> 0 0 0;</span><br></pre></td></tr></table></figure>

<ul>
<li>div居中</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">margin</span><span class="selector-pseudo">:0</span> <span class="selector-tag">aoto</span>;   居中</span><br></pre></td></tr></table></figure>

<p>要求：块元素，块元素有固定的宽度</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;div style="width: 50px;</span><br><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">block</span>;     </span><br><span class="line"><span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>"&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>



<h3 id="圆角边框"><a href="#圆角边框" class="headerlink" title="圆角边框"></a>圆角边框</h3><p>4个角</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">        <span class="selector-tag">div</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">            <span class="attribute">border-radius</span>: <span class="number">50px</span> <span class="number">20px</span> <span class="number">10px</span> <span class="number">5px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<p>左上右上      右下左下（主次对角线）顺时针方向</p>
<ul>
<li>圆： border-radius: 50px                      圆角   =   半径<ul>
<li>100*100 则四个角设置为50；</li>
</ul>
</li>
</ul>
<h3 id="阴影"><a href="#阴影" class="headerlink" title="阴影"></a>阴影</h3><ul>
<li>box-shadow:10px    10px    100px    yellow;</li>
</ul>
<h2 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h2><ul>
<li>标准文档流</li>
</ul>
<p>块级元素：独占一行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">h1~h6    p     div  列表</span><br></pre></td></tr></table></figure>

<p>行内元素：不独占一行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">span   a    img</span><br></pre></td></tr></table></figure>

<p>行内元素可以被包含在块级元素中。</p>
<ul>
<li><p>display</p>
<ul>
<li>block：    块元素</li>
<li>inline       行内元素</li>
<li>inline-block     是块元素，但可以内联，在一行    </li>
<li>none     </li>
</ul>
</li>
<li><p>浮动     float</p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">float</span>: <span class="selector-tag">right</span>;</span><br><span class="line"><span class="selector-tag">float</span>: <span class="selector-tag">left</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>clear</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">clear</span><span class="selector-pseudo">:right</span>;      右侧不允许有浮动元素</span><br><span class="line"><span class="selector-tag">clear</span><span class="selector-pseudo">:left</span>;       左侧不允许有浮动元素</span><br><span class="line"><span class="selector-tag">clear</span><span class="selector-pseudo">:both</span>;       两侧都不允许有</span><br></pre></td></tr></table></figure>

<h3 id="父级边框塌陷问题-解决方案："><a href="#父级边框塌陷问题-解决方案：" class="headerlink" title="父级边框塌陷问题    解决方案："></a>父级边框塌陷问题    解决方案：</h3><ul>
<li>增加父级元素的高度</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#father</span>&#123;</span><br><span class="line">    <span class="attribute">bored</span>:<span class="number">1px</span> <span class="number">#000</span> solid;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">800px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>增加一个空的div标签，清除浮动</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;div class="clear"&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clear</span>&#123;</span><br><span class="line">    <span class="attribute">clear</span>:both;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>在父级元素中加一个   overflow（自动溢出）<ul>
<li>hidden   隐藏</li>
</ul>
</li>
<li>父类增加一个伪类：after</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#father</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">	<span class="attribute">content</span>:<span class="string">''</span>;</span><br><span class="line">    <span class="attribute">display</span>:block;</span><br><span class="line">    <span class="attribute">clear</span>:both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h3><ul>
<li>浮动元素后面加空div</li>
</ul>
<p>简单，代码中尽量避免空div</p>
<ul>
<li>设置父级元素的高度</li>
</ul>
<p>简单，元素假设有了固定的高度，就会被限制</p>
<ul>
<li>overflow</li>
</ul>
<p>简单，下拉的一些场景避免使用</p>
<ul>
<li>父级添加一个伪类：after（推荐）</li>
</ul>
<p>写法稍微复杂，但是没有缺点</p>
<h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><ul>
<li>display</li>
</ul>
<p>方向不可控制</p>
<ul>
<li>float</li>
</ul>
<p>浮动起来会脱离标准文档流</p>
<h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><h3 id="相对定位"><a href="#相对定位" class="headerlink" title="相对定位"></a>相对定位</h3><p>position:relative;</p>
<ul>
<li>相对于自己原来的位置进行偏移,仍然在标准文档流中。原来的位置会被保留。</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">top</span><span class="selector-pseudo">:-20px</span>;</span><br><span class="line"><span class="selector-tag">left</span><span class="selector-pseudo">:20px</span>;</span><br><span class="line"><span class="selector-tag">bottom</span><span class="selector-pseudo">:-10px</span>;</span><br><span class="line"><span class="selector-tag">right</span><span class="selector-pseudo">:20px</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">position</span><span class="selector-pseudo">:relative</span>;   <span class="comment">/*相对定位：上下左右*/</span></span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">        <span class="selector-tag">body</span>&#123;</span><br><span class="line">           <span class="attribute">padding</span>:<span class="number">20px</span>;</span><br><span class="line">       &#125;</span><br><span class="line">        <span class="selector-tag">div</span>&#123;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">            <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#0000ff</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-id">#first</span>&#123;</span><br><span class="line">            <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#0000ff</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: aqua;</span><br><span class="line">            <span class="attribute">position</span>:relative;   <span class="comment">/*相对定位：上下左右*/</span></span><br><span class="line">            <span class="attribute">top</span>:-<span class="number">20px</span>;</span><br><span class="line">            <span class="attribute">left</span>:<span class="number">20px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-id">#second</span>&#123;</span><br><span class="line">            <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#0000ff</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: cyan;</span><br><span class="line">            <span class="attribute">position</span>:relative;</span><br><span class="line">            <span class="attribute">left</span>:<span class="number">20px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-id">#third</span>&#123;</span><br><span class="line">            <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#0000ff</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: antiquewhite;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;div id="father"&gt;</span><br><span class="line">    &lt;div id="first"&gt;第一个盒子&lt;/div&gt;</span><br><span class="line">    &lt;div id="second"&gt;第二个盒子&lt;/div&gt;</span><br><span class="line">    &lt;div id="third"&gt;第三个盒子&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/Mr-lee-MQ.hithub.io/Mr-lee-MQ.hithub.io/2020/07/15/CSS3/sp200723_182303.png" alt></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#box</span>&#123;</span></span><br><span class="line">            border: 1px solid red;</span><br><span class="line">            height: 300px;</span><br><span class="line">            width: 300px;</span><br><span class="line">            padding: 10px;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        a&#123;</span><br><span class="line">            height: 100px;</span><br><span class="line">            width: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#ff55fa</span>;</span></span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 100px;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">            display: block;</span><br><span class="line">            color: white;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-tag">rgba</span>(0, 0, 255, 0<span class="selector-class">.98</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.a2</span>&#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            left: 200px;</span><br><span class="line">            top: -100px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.a4</span>&#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            right: -200px;</span><br><span class="line">            top: -100px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.a5</span>&#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line"><span class="css">            <span class="selector-tag">right</span><span class="selector-pseudo">:-100px</span>;</span></span><br><span class="line">            top: -300px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"a1"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>链接一<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"a2"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>链接二<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"a3"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>链接三<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"a4"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>链接四<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"a5"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>链接五<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h3><p>position:absolute</p>
<ul>
<li>定位：基于xxx定位，上下左右<ul>
<li>没有父级元素定位的前提下，相对于浏览器定位</li>
<li>假设父级元素存在定位，我们通常会相对于父级元素进行偏移</li>
<li>在父级元素范围内移动</li>
</ul>
</li>
<li>相对于父级或浏览器的位置，进行指定的偏移，绝对定位的话，他不在标准文档流中，原来的位置也不会被保留。</li>
</ul>
<h3 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h3><p>position:fixed;</p>
<p>元素的位置相对于浏览器窗口是固定位置。即使窗口是滚动的它也不会移动。fixed表示脱离了正常的文档流。</p>
<h3 id="z-index"><a href="#z-index" class="headerlink" title="z-index"></a>z-index</h3><p>层级:最低是0，最高无限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">z-index:max;</span><br></pre></td></tr></table></figure>

<p>opactity:0.5      背景透明度</p>
]]></content>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Git</title>
    <url>/Mr-lee-MQ.hithub.io/2020/06/10/Git/</url>
    <content><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git<a id="more"></a></h1><h2 id="idea安装Git"><a href="#idea安装Git" class="headerlink" title="idea安装Git"></a>idea安装Git</h2><ul>
<li><p>[下载地址]:<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a></p>
</li>
<li><p>安装默认</p>
</li>
<li><p>运行测试：win+r,cmd  打开控制台，输入git指令，看到下图即表示安装成功</p>
</li>
<li><p><img src="https://stepimagewm.how2j.cn/5793.png" alt="运行测试"></p>
</li>
</ul>
<h2 id="配置git"><a href="#配置git" class="headerlink" title="配置git"></a>配置git</h2><ul>
<li><p>菜单-&gt;settings-&gt;Version Control-&gt;Git-&gt;Path to Git executable: 设置为<a href="https://how2j.cn/k/idea/idea-git-install/1359.html" target="_blank" rel="noopener">安装git</a>中所安装的git.exe</p>
</li>
<li><p><img src="https://stepimagewm.how2j.cn/5794.png" alt="为IDEA指定git路径"></p>
</li>
<li><p>接下来为github设置账号密码：<br>菜单-&gt;settings-&gt;Version Control-&gt;GitHub-&gt;Create API Token</p>
</li>
<li><p><img src="https://stepimagewm.how2j.cn/5795.png" alt="设置github账号"></p>
</li>
</ul>
<h2 id="idea-pull项目"><a href="#idea-pull项目" class="headerlink" title="idea pull项目"></a>idea pull项目</h2><ul>
<li>checkout：菜单-&gt;VCS-&gt;Chekout from Version Control-&gt;GitHub</li>
<li><img src="https://stepimagewm.how2j.cn/5797.png" alt="checkout"></li>
<li>输入项目参数：Git Repositor URL:<a href="https://github.com/how2j/higit.git" target="_blank" rel="noopener">https://github.com/how2j/higit.git</a><br>Parent Directory: e:\project<br>Directory Name: higit<br>然后点击 Clone</li>
<li><img src="https://stepimagewm.how2j.cn/5798.png" alt="输入项目参数"></li>
</ul>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML5</title>
    <url>/Mr-lee-MQ.hithub.io/2020/07/13/HTML5/</url>
    <content><![CDATA[<h1 id="HTML详解"><a href="#HTML详解" class="headerlink" title="HTML详解"></a>HTML详解<a id="more"></a></h1><h2 id="初识HTML"><a href="#初识HTML" class="headerlink" title="初识HTML"></a>初识HTML</h2><ul>
<li>Hper Text Markup Language(超文本标记语言)</li>
<li>W3C     万维网联盟</li>
<li>W3C标准包括<ul>
<li>结构化标准语言（HTML    XML）</li>
<li>表现标准语言（CSS）</li>
<li>行为标准（DOM，ECMAScript）</li>
</ul>
</li>
</ul>
<h2 id="HTML的基本结构"><a href="#HTML的基本结构" class="headerlink" title="HTML的基本结构"></a>HTML的基本结构</h2><p>网页头部</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一个网页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>主体部分</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>&lt; body&gt;  ，&lt; /body&gt;等成对出现的标签（&lt; body&gt; 为开放标签     &lt; /body&gt;为闭合标签 ）</p>
</li>
<li><p>&lt; meta charset=”UTF-8”&gt;为自闭合标签</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE：      &gt;</span>      <span class="comment">&lt;!--告诉浏览器要使用什么规范--&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一个程序<span class="tag">&lt;/<span class="name">title</span>&gt;</span>    <span class="comment">&lt;!--网页的标题--&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>      <span class="comment">&lt;!--mate 描述性标签，用来描述网站的信息，可做SEO--&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;meta  name &#x3D;&quot;keywords&quot; content&#x3D;&quot;西部开源&quot; &gt;</span><br><span class="line">&lt;meta name&#x3D;&quot;description&quot; content&#x3D;&quot;可以学JAVA&quot; &gt;	&lt;！--网站描述--&gt;</span><br></pre></td></tr></table></figure>

<h2 id="网页基本标签"><a href="#网页基本标签" class="headerlink" title="网页基本标签"></a>网页基本标签</h2><ul>
<li><p>标题标签</p>
<ul>
<li>（&lt; h1&gt;一级标签&lt; /h1&gt;）</li>
<li>（&lt; h2&gt;一级标签&lt; /h2&gt;）</li>
<li>（&lt; h3&gt;一级标签&lt; /h3&gt;）</li>
</ul>
</li>
<li><p>段落标签</p>
<ul>
<li>（&lt; p&gt;段落&lt; /p&gt;）</li>
</ul>
</li>
<li><p>换行标签</p>
<ul>
<li>（br  换行）自闭合标签</li>
</ul>
</li>
<li><p>水平线标签</p>
<ul>
<li>（&lt; /hr&gt;）</li>
</ul>
</li>
<li><p>字体样式标签</p>
<ul>
<li>粗体（&lt; stong&gt;  &lt; /stong&gt;）</li>
<li>斜体（&lt; em&gt;&lt; /em&gt;）</li>
</ul>
</li>
<li><p>特殊符号（&amp;     ）</p>
<ul>
<li>空格（&amp;nbsp；）</li>
<li>大于号   (&amp;gt ;）</li>
<li>小于号   (&amp;lt ;)</li>
<li>版权符号（&amp;copy；）</li>
</ul>
</li>
</ul>
<h2 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h2><ul>
<li>img标签学习<ul>
<li>&lt; img src&gt;<ul>
<li>src     图片地址<ul>
<li>相对地址（常用）../      –上一级目录</li>
<li>绝对地址</li>
</ul>
</li>
<li>alt     图片名字</li>
<li>title     鼠标悬停显示的文字</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="链接标签"><a href="#链接标签" class="headerlink" title="链接标签"></a>链接标签</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;&quot;&gt;&lt;&#x2F;a&gt;       &lt;!--必填，表示要跳转的网址</span><br></pre></td></tr></table></figure>

<ul>
<li><p>target     以何种方式打开窗口</p>
<ul>
<li>blank     在一个新的网页中打开</li>
<li>self         在本网页中打开</li>
</ul>
</li>
<li><p>锚链接</p>
<ul>
<li>需要一个锚标记</li>
<li>#加标记name </li>
</ul>
</li>
<li><p>功能性链接</p>
<ul>
<li><p>邮件链接： mailto</p>
</li>
<li><p>QQ链接：</p>
</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"http://wpa.qq.com/msgrd?v=3&amp;uin=&amp;site=qq&amp;menu=yes"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">src</span>=<span class="string">"http://wpa.qq.com/pa?p=2::52"</span> <span class="attr">alt</span>=<span class="string">"点击我"</span> <span class="attr">title</span>=<span class="string">"点击我"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="行内元素和块元素"><a href="#行内元素和块元素" class="headerlink" title="行内元素和块元素"></a>行内元素和块元素</h2><ul>
<li>块元素<ul>
<li>无论内容多少，该元素独占一行</li>
<li>（p、h1-h6）</li>
</ul>
</li>
<li>行内元素<ul>
<li>内容撑开宽度，左右都是行元素的可以排在一行</li>
<li>（a.strong.em…..）</li>
</ul>
</li>
</ul>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ul>
<li>无序列表</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;ol&gt;</span><br><span class="line">	&lt;li&gt;JAVA&lt;&#x2F;li&gt;</span><br><span class="line">	&lt;li&gt;前端&lt;&#x2F;li&gt;</span><br><span class="line">	&lt;li&gt;C语言&lt;&#x2F;li&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;ol&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>有序列表</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">	&lt;li&gt;JAVA&lt;&#x2F;li&gt;</span><br><span class="line">	&lt;li&gt;前端&lt;&#x2F;li&gt;</span><br><span class="line">	&lt;li&gt;C语言&lt;&#x2F;li&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;ul&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>自定义列表</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dl&gt;</span><br><span class="line">    &lt;dt&gt;学科&lt;&#x2F;dt&gt;</span><br><span class="line">    &lt;dd&gt;JAVA&lt;&#x2F;dd&gt;</span><br><span class="line">    &lt;dd&gt;Linux&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;&#x2F;dl&gt;</span><br></pre></td></tr></table></figure>

<h2 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h2><ul>
<li><p>表格标签table</p>
<ul>
<li><p>行标签   tr</p>
</li>
<li><p>列标签   td</p>
</li>
<li><p>边框   border</p>
</li>
<li><p>跨列   colspan</p>
</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;td colspan&#x3D;&quot;4&quot;&gt;1-1&lt;&#x2F;td&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>跨行  rowspan</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;td rowspan&#x3D;&quot;2&quot;&gt;2-1&lt;&#x2F;td&gt;</span><br></pre></td></tr></table></figure>

<h2 id="视频和音频"><a href="#视频和音频" class="headerlink" title="视频和音频"></a>视频和音频</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;video src&#x3D;&quot;..&#x2F;resources&#x2F;video&#x2F;NOGIZAKA46_&gt;&lt;&#x2F;video&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>src     资源路径</li>
<li>controls    控制条 </li>
<li>autoplay    自动播放</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;audio src&#x3D;&quot;..&#x2F;resources&#x2F;audio&#x2F;LOSER%20-%20米津玄師.mp3&quot;&gt;&lt;&#x2F;audio&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>controls    控制条 </li>
<li>autoplay    自动播放</li>
</ul>
<h2 id="页面结构分析"><a href="#页面结构分析" class="headerlink" title="页面结构分析"></a>页面结构分析</h2><ul>
<li>header    标题头部区域的内容</li>
<li>footer     标题脚部区域的内容</li>
<li>section    Web页面中的一块独立区域</li>
<li>article      独立的文章内容</li>
<li>aside      相关内容或应用</li>
<li>nav      导航类辅助内容</li>
</ul>
<h2 id="iframe内联框架"><a href="#iframe内联框架" class="headerlink" title="iframe内联框架"></a>iframe内联框架</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">height</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>src    地址</li>
<li>w-h    高度宽度   </li>
</ul>
<h2 id="表单语法"><a href="#表单语法" class="headerlink" title="表单语法"></a>表单语法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;form action&#x3D;&quot;&quot;&gt;&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>action   表单提交的位置，可以是网站，也可以是一个请求处理的地址</li>
<li>method    post，get 提交方式<ul>
<li>get     信息可以在url中看到，不安全，高速</li>
<li>post    比较安全，传输大文件</li>
</ul>
</li>
</ul>
<p>文本输入框    input</p>
<ul>
<li>type     指定元素类型<ul>
<li>text  文本框</li>
<li>password    密码框</li>
<li>submit    提交</li>
<li>reset    重置</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"我的第一个程序.html"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>用户户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span><span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password "</span><span class="attr">name</span>=<span class="string">"psd"</span> &gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="表单元素格式"><a href="#表单元素格式" class="headerlink" title="表单元素格式"></a>表单元素格式</h3><ul>
<li>type    指定元素类型      （都需要name属性）<ul>
<li>text   文本框（默认）</li>
<li>password    密码框</li>
<li>checkbox   单选框</li>
<li>radio   单选框       必须有初值，且单选框的name需一致</li>
<li>submit    按钮提交</li>
<li>reset    按钮重置</li>
<li>file     文件域</li>
<li>hidden 隐藏域</li>
<li>image   图片点击</li>
<li>button   按钮</li>
</ul>
</li>
<li>name    指定表单元素的名称</li>
<li>value    元素的初始值      type为radio时必须指定一个值</li>
<li>size   指定表单元素的初始宽度。当type为text或password时，表单元素的大小以字符为单位。对于其它类型，宽度以像素为单位</li>
<li>maxlength    type为text或password时，输入的最大字符</li>
<li>checked     type为radio或checkbox时，指定按钮是否被选中</li>
</ul>
<p>单选框   radio</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span><span class="attr">value</span>=<span class="string">"boy"</span>  <span class="attr">name</span>=<span class="string">"sex"</span> /&gt;</span>男</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span><span class="attr">value</span>=<span class="string">"girl"</span> <span class="attr">name</span>=<span class="string">"sex"</span> /&gt;</span>女</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>多选框    checkbox</p>
<ul>
<li>checked    默认选中</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"game"</span><span class="attr">name</span>=<span class="string">"hobby"</span> &gt;</span>游戏</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"go"</span><span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">checked</span>&gt;</span>逛街</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"hua"</span><span class="attr">name</span>=<span class="string">"hobby"</span> &gt;</span>化妆</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>按钮  button</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span><span class="attr">name</span>=<span class="string">"but1"</span> <span class="attr">value</span>=<span class="string">"点击"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"image"</span><span class="attr">src</span>=<span class="string">"../resources/image/mmexport1564926230808.jpg"</span><span class="attr">alt</span>=<span class="string">"tutu"</span><span class="attr">width</span>=<span class="string">"200"</span><span class="attr">height</span>=<span class="string">"200"</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p>下拉框/列表框      select</p>
<ul>
<li><p>select    列表</p>
</li>
<li><p>option  value=“      ”     选项的值</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"列表名称"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"china"</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"ruishi"</span>&gt;</span>瑞士<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"deguo"</span>&gt;</span>德国<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"meiguo"</span>&gt;</span>美国<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>文本域   textarea</p>
<ul>
<li>cols   长度</li>
<li>rows   宽度</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"textarea"</span> <span class="attr">cols</span>=<span class="string">"10"</span> <span class="attr">rows</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>文件域    file</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"files"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">name</span>=<span class="string">"bon1"</span> <span class="attr">value</span>=<span class="string">"上传"</span> &gt;</span></span><br></pre></td></tr></table></figure>

<p>邮件验证     email</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;email&quot;name&#x3D;&quot;email&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>URL验证   url</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;url&quot; name&#x3D;&quot;url&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>数字验证  number</p>
<ul>
<li>max</li>
<li>min</li>
<li>step     递增或递减</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;number&quot;name&#x3D;&quot;number&quot; max&#x3D;&quot;100&quot;min&#x3D;&quot;10&quot;step&#x3D;&quot;1&quot; &gt;</span><br></pre></td></tr></table></figure>

<p>滑块     range</p>
<ul>
<li>max</li>
<li>min</li>
<li>step    递增或递减 </li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span><span class="attr">name</span>=<span class="string">"huakuai"</span><span class="attr">max</span>=<span class="string">"100"</span><span class="attr">min</span>=<span class="string">"1"</span><span class="attr">step</span>=<span class="string">"1"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>搜索框   search</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span><span class="attr">name</span>=<span class="string">"sousuo"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="表单的应用"><a href="#表单的应用" class="headerlink" title="表单的应用"></a>表单的应用</h2><ul>
<li><p>只读域   readonly</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span><span class="attr">value</span>=<span class="string">"boy"</span>  <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">readonly</span>/&gt;</span>男</span><br></pre></td></tr></table></figure>
</li>
<li><p>禁用域    disabled</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"game"</span><span class="attr">name</span>=<span class="string">"hobby"</span>  <span class="attr">disabled</span>&gt;</span>游戏</span><br></pre></td></tr></table></figure>

<ul>
<li>隐藏域   hidden</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password "</span><span class="attr">name</span>=<span class="string">"psd"</span> <span class="attr">hidden</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>增强鼠标的可用性   lable<ul>
<li>for=“进入某个id中”</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"mark"</span>&gt;</span>你点我试试<span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="表单初级验证"><a href="#表单初级验证" class="headerlink" title="表单初级验证"></a>表单初级验证</h2><ul>
<li>提示信息：placeholder=“请输入用户名”</li>
<li>非空判断：required</li>
<li>正则表达式:    pattern     百度可得</li>
</ul>
]]></content>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言基础</title>
    <url>/Mr-lee-MQ.hithub.io/2020/06/17/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="C语言基础"><a href="#C语言基础" class="headerlink" title="C语言基础"></a>C语言基础<a id="more"></a></h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;                        //这是编译预处理指令</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>                               <span class="comment">//定义主函数</span></span></span><br><span class="line"><span class="function"></span>&#123;                                        <span class="comment">//函数开始的标志</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"This is C program.\n"</span>);      <span class="comment">//输出所指定的一行信息     </span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;                            <span class="comment">//函数执行完毕时返回函数值0  </span></span><br><span class="line">&#125;                                        <span class="comment">//函数结束的标志</span></span><br></pre></td></tr></table></figure>

<ul>
<li>main是函数的名字，表示“主函数”；每一个C语言程序必须有一个main函数</li>
<li>main函数前面的int表示此函数的类型是int类型（整型），即在执行主函数后会得到一个值（即函数值），其值为整型。</li>
<li>return0；的作用是当main函数执行结束前将整数0作为函数值，返回到调用函数处。</li>
<li>函数体用{}括起来。</li>
<li>printf是C编译系统提供的函数库中的输出函数。printf函数中双引号内的字符串“This is a C program”。”安原样输出。\n是换行符，即在输出“This is a C program”后，显示屏上的光标位置移到下一行的开头。</li>
<li>每一个语句最后都有一个分号，表示语句结束。</li>
<li>.h 头文件。</li>
<li>#include&lt;stdio.h&gt;预处理指令</li>
</ul>
<p><strong>注释</strong>     </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;第一行注释</span><br><span class="line">&#x2F;&#x2F;继续注释</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*一整块</span><br><span class="line">都是注释*&#x2F;</span><br></pre></td></tr></table></figure>

<ul>
<li>在字符串中的//和/*都不作为注释的开始。而是作为字符串的一部分。</li>
</ul>
<p><strong>求两个整数之和</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a,b,sun;</span><br><span class="line">	a=<span class="number">123</span>;</span><br><span class="line">	b=<span class="number">456</span>;</span><br><span class="line">	sum=a+b;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"sum is %d \n"</span>,sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>比较两个整数中的较大者</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;            <span class="comment">//对被调用函数max的声明</span></span><br><span class="line">	<span class="keyword">int</span> a,b,c;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>&amp;a,&amp;b);</span><br><span class="line">	c=<span class="built_in">max</span>(a,b);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"max=%d\n"</span>,c);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;	</span><br><span class="line">	<span class="keyword">int</span> z;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;z)z=x;</span><br><span class="line">	<span class="keyword">else</span> z=y;</span><br><span class="line">	<span class="keyword">return</span> (z);			</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>max(a,b)调用max函数，在调用时将a和b作为max函数的实际参数（在主函数负责传送值）的值传送给max函数中的形式参数（在子函数中负责接收值） </li>
</ul>
<p><strong>C语言程序的结构</strong></p>
<p><img src="/Mr-lee-MQ.hithub.io/Mr-lee-MQ.hithub.io/2020/06/17/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/sp200618_004749.png" alt></p>
<p><strong>C程序运行步骤</strong></p>
<p>编辑 源程序.c        编译目标程序.obj          编译成功转为可执行目标程序.exe文件</p>
<p><strong>求9开算术平方根</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">9</span>,y;</span><br><span class="line">	y=<span class="built_in">sqrt</span>(x); 															</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d"</span>,y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>sqrt()函数为math的一个函数。</li>
</ul>
<p><strong>数据类型及其运算</strong></p>
<ul>
<li><p>基本类型</p>
<ul>
<li><p>整型类型</p>
<ul>
<li>基本类型  int                                 2B         </li>
<li>短整型  short  int</li>
<li>长整型  long  int                           4B</li>
<li>双长整型  long  long  int</li>
<li>字符型  char                                 1B                                 char默认值为无符号的，若%u输出负数，结果异常                  （-128~127）</li>
<li>希尔型  bool           默认为0</li>
</ul>
</li>
<li><p>浮点类型</p>
<ul>
<li><p>单精度浮点型  float                        4B</p>
</li>
<li><p>双精度浮点型   double                   8B</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><p>枚举类型enum</p>
</li>
<li><p>空类型void</p>
</li>
<li><p>派生类型</p>
<ul>
<li>指针类型 *</li>
<li>数组类型[]</li>
<li>结构体类型union</li>
<li>函数类型</li>
</ul>
</li>
</ul>
<p><strong>常量与变量</strong></p>
<ul>
<li><p>整数常量</p>
<ul>
<li>整型常量：十进制，八进制（0作为前缀）十六进制（0X或0x作为前缀）U（unsigned  无符号整数）L（long  长整数）后缀可大写，也可小写。</li>
</ul>
</li>
<li><p>实型常量</p>
<ul>
<li>小数形式： 123.123456</li>
<li>指数形式：<ul>
<li>必须包含小数点</li>
<li>指数（E或e后的数字）</li>
<li>带符号的指数是用e或E引入的（e或E后不能有小数点或小数）</li>
</ul>
</li>
</ul>
</li>
<li><p>字符常量</p>
<ul>
<li><p>一个普通的字符   ‘x’</p>
</li>
<li><p>转义字符</p>
</li>
<li><pre><code>\\              \字符
\a                \警报铃声
\b                \退格键
\f                \换页符
\n                \换行符
\r                \回车
\t                \水平制表符
\v                \垂直制表符
\ooo            \一到三位的八进制数
\xhh...            \一个或多个数字的十六进制数
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">  + 字符串常量    “123”     “boy”</span><br><span class="line"></span><br><span class="line">  + 符号常量     #define  PI   3.1416                 \\注意行末没有分号</span><br><span class="line"></span><br><span class="line">+ 变量（变量名由字母，数字，下划线组成。必须是字母或下划线开头）</span><br><span class="line"></span><br><span class="line">  + C区分大小写</span><br><span class="line"></span><br><span class="line">**标识符**</span><br><span class="line"></span><br><span class="line">关键字</span><br><span class="line"></span><br><span class="line">![](sp200618_020047.png)</span><br><span class="line"></span><br><span class="line">**原，反，补码**</span><br><span class="line"></span><br><span class="line">原码-反码：   除符号位外，其他数按位取反。</span><br><span class="line"></span><br><span class="line">反码-补码：   最后一位   +1。</span><br><span class="line"></span><br><span class="line">补码-原码：   对该补码再求补码 </span><br><span class="line"></span><br><span class="line">+ 0的反码不唯一</span><br><span class="line">+ 0的补码唯一 </span><br><span class="line"></span><br><span class="line">**运算符和表达式**</span><br><span class="line"></span><br><span class="line">运算符：用来表示不同运算的符号</span><br><span class="line"></span><br><span class="line">表达式：由运算符和操作数组成的式子9&gt;5？ 100:200</span><br><span class="line"></span><br><span class="line">优先级：指当不同的运算符进行混合运算时，运算顺序由运算符的优先级决定。</span><br><span class="line"></span><br><span class="line">综合性：指运算符可以和左边的表达式结合，也可以跟右边的表达式结合</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**运算符优先级**</span><br><span class="line"></span><br><span class="line">1.第一优先级（左到右）</span><br><span class="line"></span><br><span class="line">+ []			数组下标							 </span><br><span class="line">+ ()             圆括号                		      </span><br><span class="line">+ .              成员选择（对象）     </span><br><span class="line">+ -&gt;            成员选择（指针）             </span><br><span class="line"></span><br><span class="line">2.第二优先级（右到左）</span><br><span class="line"></span><br><span class="line">+ －　        负号运算符                  </span><br><span class="line">+   type       强制类型转换       </span><br><span class="line">+ ++              自增运算符    </span><br><span class="line">+ －－           自减运算符</span><br><span class="line">+ ＊　　　　取值运算符</span><br><span class="line">+ &amp;                 取地址运算符</span><br><span class="line">+ ！                逻辑非运算符</span><br><span class="line">+ ~                   按位取反运算符</span><br><span class="line">+ sizeof          长度运算符</span><br><span class="line"></span><br><span class="line">3.第三优先级（左到右）</span><br><span class="line"></span><br><span class="line">+ &#x2F;                    除</span><br><span class="line">+ ＊　　　　　乘</span><br><span class="line">+ %                    取余</span><br><span class="line"></span><br><span class="line">4.第四优先级（左到右）</span><br><span class="line"></span><br><span class="line">+ ＋　　　　　加</span><br><span class="line">+ －　　　　　减</span><br><span class="line"></span><br><span class="line">5.第五优先级（左到右）</span><br><span class="line"></span><br><span class="line">+ &lt;&lt;                    左移</span><br><span class="line">+ ＞＞                右移</span><br><span class="line"></span><br><span class="line">6.第六优先级（左到右）</span><br><span class="line"></span><br><span class="line">+ ＞</span><br><span class="line">+ ＞＝</span><br><span class="line">+ ＜</span><br><span class="line">+ ＜＝</span><br><span class="line"></span><br><span class="line">7.第七优先级（左到右）</span><br><span class="line"></span><br><span class="line">+ &#x3D;&#x3D;                    等于</span><br><span class="line">+ ！&#x3D;                  不等于</span><br><span class="line"></span><br><span class="line">8.第八优先级（左到右）</span><br><span class="line"></span><br><span class="line">+ &amp;                      按位与</span><br><span class="line"></span><br><span class="line">9.第九优先级（左到右）</span><br><span class="line"></span><br><span class="line">+ ^                          按位异或</span><br><span class="line"></span><br><span class="line">10.第十优先级（左到右）</span><br><span class="line"></span><br><span class="line">+ |                          按位或</span><br><span class="line"></span><br><span class="line">11.第十一优先级（左到右）</span><br><span class="line"></span><br><span class="line">+ &amp;&amp;                      逻辑与</span><br><span class="line"></span><br><span class="line">12.第十二优先级（左到右）</span><br><span class="line"></span><br><span class="line">+ ||                        逻辑或</span><br><span class="line"></span><br><span class="line">13.第十三优先级（右到左）</span><br><span class="line"></span><br><span class="line">+ ？：                     条件运算符</span><br><span class="line"></span><br><span class="line">14.第十四优先级（右到左）</span><br><span class="line"></span><br><span class="line">+ &#x3D;                           赋值运算符</span><br><span class="line">+ &#x2F;&#x3D;                          除后赋值</span><br><span class="line">+ *&#x3D;                         乘后赋值</span><br><span class="line">+ %&#x3D;                        取余后赋值</span><br><span class="line">+ +&#x3D;                         加后赋值</span><br><span class="line">+ -&#x3D;                          减后赋值</span><br><span class="line">+ &lt;&lt;&#x3D;                       左移后赋值</span><br><span class="line">+ ＞＞&#x3D;                   右移后赋值</span><br><span class="line">+ &amp;&#x3D;                         按位与后赋值</span><br><span class="line">+ ^&#x3D;                         按位异或后赋值</span><br><span class="line">+ |&#x3D;                          按位或后赋值</span><br><span class="line"></span><br><span class="line">15.第十五优先级（左到右）</span><br><span class="line"></span><br><span class="line">+ ，                            逗号运算符</span><br><span class="line"></span><br><span class="line">**sizeof长度运算符和strlen（）**</span><br><span class="line"></span><br><span class="line">+ **sizeof**   操作符以字节形式给出了其操作数的存储大小。操作数的存储大小由操作数的类型决定。操作数可以是一个表达式或者括在括号里的类型名</span><br><span class="line"></span><br><span class="line">  + &#96;&#96;&#96;c</span><br><span class="line">    #include&lt;stdio.h&gt;</span><br><span class="line">    int main()</span><br><span class="line">    &#123;</span><br><span class="line">    	printf(&quot;%d&quot;,sizeof(int));                 &#x2F;&#x2F;输出为4</span><br><span class="line">    	return 0;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></code></pre></li>
<li><pre><code class="c"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span>
<span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>
<span class="function"></span>{
    <span class="keyword">int</span> a[<span class="number">50</span>];
    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="keyword">sizeof</span>(a));                  <span class="comment">//输出为200</span>
    <span class="keyword">int</span> *b = <span class="keyword">new</span> <span class="keyword">int</span> [<span class="number">50</span>];

</code></pre>
</li>
</ul>
</li>
</ul>
<pre><code>    printf(&quot;%d&quot;,sizeof(*b));                  //输出为4
    return 0;

}
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">+ **strlen()**         求字符串长度</span><br><span class="line"></span><br><span class="line">+ &#96;&#96;&#96;c</span><br><span class="line">  #include&lt;stdio.h&gt;</span><br><span class="line">  #include&lt;string.h&gt;</span><br><span class="line">  int main()</span><br><span class="line">  &#123;</span><br><span class="line">  	char arr1[] &#x3D;&quot;abcdef&quot;;				&#x2F;&#x2F;字符串</span><br><span class="line">  	char arr2[] &#x3D;&#123;‘a’‘b’‘c’‘d’‘e’‘f’&#125;;  &#x2F;&#x2F;6个字符。没有\0.</span><br><span class="line">  	</span><br><span class="line">  	printf(&quot;%d\n&quot;,sizeof(arr1)); 		&#x2F;&#x2F;结果为7，arr1为数组名</span><br><span class="line">      									&#x2F;&#x2F;放进去求的是数组的总大小</span><br><span class="line">      									&#x2F;&#x2F;arr1中的字符串还包括\0。</span><br><span class="line">  	printf(&quot;%d\n&quot;,sizeof(arr2));		&#x2F;&#x2F;结果为6</span><br><span class="line">  	</span><br><span class="line">  	</span><br><span class="line">  	printf(&quot;%d\n&quot;,strlen(arr1));		&#x2F;&#x2F;结果为6，\0不统计</span><br><span class="line">  	printf(&quot;%d\n&quot;,strlen(arr2));		&#x2F;&#x2F;结果为6，没有\0。</span><br><span class="line">  	return 0;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></code></pre><p><strong>算数运算符和表达式</strong>     （+ -   *   /    %）</p>
<ul>
<li><p>“%”运算符两侧的运算分量<strong>必须是整型数据</strong>，且<strong>运算结果的正负号与“%”左边的运算分量</strong>相同</p>
</li>
<li><p>＊　／　％的优先级高于+  -  ，结合性均为从左到右。</p>
</li>
<li><p>＋　－　*    /     运算的两个数中，如果其中一个为实数，则结果是double型       （整数  int    实数  float（单精度）  double（双精度），字符   char）</p>
</li>
<li><p>当“/”的两个运算分量均为整数时，计算结果也必须为整数。</p>
</li>
<li><pre><code class="c"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span>
<span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>
<span class="function"></span>{
    <span class="keyword">int</span> x;
    <span class="keyword">double</span> y;
    x=<span class="number">20</span>/<span class="number">3</span>*<span class="number">3</span>;
    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);                <span class="comment">//20/3=6   6*3=18</span>
    x=<span class="number">20</span>/<span class="number">3.0</span>*<span class="number">3</span>;                        <span class="comment">//出现小数点默认double类型  30/6=6.66                                        //6.66*3=19.9=20    四舍五入</span>
    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x);                <span class="comment">//以%d输出结果仍为整数</span>
    y=<span class="number">20</span>/<span class="number">3.0</span>*<span class="number">3</span>;                        <span class="comment">//默认为double</span>
    <span class="built_in">printf</span>(<span class="string">"%f\n"</span>,y);                <span class="comment">//%f输出20.000000</span>
    y=<span class="number">20</span>/<span class="number">3</span>*<span class="number">3</span>;
    <span class="built_in">printf</span>(<span class="string">"%f\n"</span>,y);                <span class="comment">//18.000000</span>
}
&lt;!--￼<span class="number">8</span>--&gt;

**逻辑与**

当逻辑与前面为假时，逻辑与后面的表达式被短路

**逻辑或**

当逻辑或前面的值为真时，逻辑或后的表达式被短路

逻辑非

！真=假

！假=真

！<span class="number">0</span> = <span class="number">1</span>
</code></pre>
</li>
</ul>
<p><strong>赋值运算符和表达式</strong>   </p>
<ul>
<li>赋值表达式的格式为：变量=表达式。</li>
<li>赋值表达式的值等于右边表达式的值，而结果的类型由左边变量的类型决定。</li>
<li>a+=b+c等价于a=a+(b+c)             a-=b+c等价于a=a-(b+c)               a* =b+c等价于 a= a*(b+c)</li>
</ul>
<p><strong>条件运算符和表达式</strong></p>
<p>“? :  “   是C语言里面唯一的一个三目运算符。</p>
<p>“表达式1 ？表达式2：表达式3”，先计算表达式1的值，若为真则返回表达式2的值作为整个条件表达式的值，否则返回条件表达式3的值。</p>
<p><strong>自增自减运算符</strong></p>
<p>++i ：先自增1，在使用i</p>
<p>i++ ：先使用i，再自增1</p>
<p><strong>逗号表达式</strong></p>
<p>逗号既可以作为函数参数列表的分隔符，也可以作为运算符。</p>
<ul>
<li>逗号表达式格式为：表达式1，表达式2，表达式3……….表达式n；</li>
<li>结合性从左到右，整个函数表达式的值就是表达式n（即为最后一个表达式的值）；</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a =(a=<span class="number">100</span>,<span class="number">20</span>,<span class="number">200</span>);</span><br><span class="line">	<span class="keyword">int</span> b =(b=<span class="number">100</span>,<span class="number">20</span>,b+<span class="number">300</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a);				<span class="comment">//200</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,b);				<span class="comment">//400</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>*<em>不同数据类型间的混合运算 *</em></p>
<p><strong>自动类型转换</strong></p>
<p>如果一个运算符两侧的数据类型不同，则先自动进行类型转换，使二者成为一种数据类型，然后进行运算。整型，实型，字符型，数据间可以进行混合运算。规律为：</p>
<ul>
<li>+、-、*、/运算的两个数中有一个数为float或double型，结果是 double 型，因为系统将所有 float 型数据都先转换为 double 型，然后进行运算。</li>
<li>如果int型与float或double型数据进行运算， 先把int型和float型数据转换为 double 型，然后进行运算，结果是 double 型。</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i=<span class="number">3</span>,j;</span><br><span class="line">	<span class="keyword">float</span> f=<span class="number">2.5</span>;</span><br><span class="line">	<span class="keyword">double</span> d =<span class="number">7.5</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%1f"</span>,<span class="number">10</span>+<span class="string">'a'</span>+i*f-d/<span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>进行 10+′a′的运算，′a′的值是整数 97，运算结果为 107。</li>
<li>由于“ * ”比“+”优先级高，先进行 i*f 的运算。先将 i 与 f 都转成 double 型，运算结果为 7.5，double 型。</li>
<li>整数 107 与ｉ*ｆ的积相加。先将整数 107 转换成双精度数，相加结果为 114.5，double 型。</li>
<li>进行d/3 的运算， 先将3 转换成 double 型， d/3 结果为 2.5， double型。</li>
<li>将10+′a′+i*f的结果114.5与d/3的商2.5相减， 结果为112.0，double 型。</li>
</ul>
<p><strong>强制类型转换</strong></p>
<p>（类型名）（表达式）</p>
<p>（int）（x+y）         将x+y的值转换为int</p>
<p>（int）x+y                  将x的值转换为int，然后再加上y</p>
<p><strong>C语句</strong></p>
<ul>
<li>if（）…else…（条件语句）</li>
<li>for（）…（循环语句）</li>
<li>while（）…（循环语句）</li>
<li>do…while  ()   (循环语句)</li>
<li>continue（结束本次循环语句）</li>
<li>break（中止执行switch或循环语句）</li>
<li>switch（多分支选择结构）</li>
<li>return（从函数返回语句）</li>
</ul>
<p><strong>函数调用语句</strong>   </p>
<p>函数调用语句由一个函数调用加一个分号构成。</p>
<p>其中printf(“This is a C statement.”)是一个函数调用，加一个分号成为一个语句。</p>
<p><strong>表达式语句</strong></p>
<p>表达式语句是由一个表达式加一个分号构成，最典型的是由赋值语句表达式构成一个赋值语句。</p>
<p><strong>；   只有一个分号的语句叫空语句</strong>。</p>
<p><strong>输入输出</strong></p>
<p>C语言本身不提供输入输出语句，提供输入输出语句的是C标准函数库即（#include&lt;stdio.h&gt;）</p>
<p>​        <strong>printf函数</strong></p>
<ul>
<li><p>printf（格式控制，输出列表）</p>
</li>
<li><p>“格式控制”是对双引号括起来的一个字符串，称为格式控制字符串，简称格式字符串。</p>
<ul>
<li>格式声明。格式声明由“%”和格式字符组成。作用是将输出的数据转换为指定的格式后输出。</li>
<li>普通字符。普通字符即需要在输出是原样输出的字符。</li>
</ul>
</li>
<li><p>输出列表是程序需要输出的一些数据，可以是常量，变量或表达式。</p>
<ul>
<li>%d   十进制整数</li>
<li>%o   八进制整数</li>
<li>%x   十六进制整型</li>
<li>%f    单精度实型，默认小数点后6位，超出6位，四舍五入</li>
<li>%lf   双精度类型     最多15位有效数字</li>
<li>%c   输出一个字符</li>
<li>%s   输出一个字符串</li>
<li>%u    无符号十进制形式输出整数</li>
</ul>
</li>
<li><p><strong>宽度精度控制输出</strong></p>
<ul>
<li><pre><code>#include&lt;stdio.h&gt;
int main()
{
    int a =1234;        //四个宽度
    printf(&quot;%d,%2d,%6d&quot;,a,a,a);        //1234,1234,  1234
}
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">  + %**2**d  宽度     </span><br><span class="line">    + 实际宽度&gt;所求宽度         按原值输出</span><br><span class="line">    + 实际宽度&lt;所求宽度        原值前补空格</span><br><span class="line">    + %**n.m**f   宽度加精度。    m：宽度     n：精度     %.**mf**</span><br><span class="line">    + 先求精度再看宽度</span><br><span class="line"></span><br><span class="line">+ **scanf函数**</span><br><span class="line"></span><br><span class="line">  +  scanf 函数中的格式控制后面应当是变量地址，而不是变量名。</span><br><span class="line">  + 如果在格式控制字符串中除了格式声明以外还有其他字符，则在输入数据时在对应的位置上应输入与这些字符相同的字符。</span><br><span class="line">  + 在用“％c”格式声明输入字符时，空格字符和“转义字符”中的字符都作为有效字符输入。</span><br><span class="line">  + 在输入数值数据时，如输入空格、回车、Tab 键或遇非法字符(不属于数值的字符)，认为该数据结束。</span><br><span class="line"></span><br><span class="line">+ **putchar函数**</span><br><span class="line"></span><br><span class="line">  + putchar 函数既可以输出可显示字符，也可以输出控制字符和转义字符。putchar(c)中的 c 可以是字符常量、整型常量、字符变量或整型变量。（其值在ASCII码之内）</span><br><span class="line"></span><br><span class="line">  + &#96;&#96;&#96;c</span><br><span class="line">    #include&lt;stdio.h&gt;</span><br><span class="line">    int main()</span><br><span class="line">    &#123;</span><br><span class="line">    	char a&#x3D; &#39;B&#39;,b&#x3D;&#39;O&#39;,c&#x3D;&#39;Y&#39;;    &#x2F;&#x2F;定义3个字符常量并初始化</span><br><span class="line">    	putchar(a);					&#x2F;&#x2F;向显示器输出字符B</span><br><span class="line">    	putchar(b);					&#x2F;&#x2F;向显示器输出字符O</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></code></pre></li>
</ul>
</li>
<li><p><strong>getchar函数</strong></p>
<ul>
<li><p>函数没有参数</p>
</li>
<li><p>函数的值就是从输入设备得到的字符。</p>
</li>
<li><p>只能接收一个字符。</p>
</li>
<li><pre><code class="c"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span>
<span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>
<span class="function"></span>{

    <span class="keyword">int</span> a=<span class="number">66</span>,b=<span class="number">79</span>,c=<span class="number">89</span>;
    <span class="built_in">putchar</span>(a);         <span class="comment">//ASCII码为字母B</span>
    <span class="built_in">putchar</span>(b);            <span class="comment">//ASCII码为字母O</span>
    <span class="built_in">putchar</span>(c);            <span class="comment">//ASCII码为字母Y</span>
    <span class="built_in">putchar</span> (<span class="string">'\n'</span>);
    <span class="keyword">return</span> <span class="number">0</span>;
}

&lt;!--￼<span class="number">12</span>--&gt;
<span class="keyword">if</span>（表达式） 语句<span class="number">1</span>
&lt;!--￼<span class="number">13</span>--&gt;
<span class="keyword">if</span>（表达式）    语句<span class="number">1</span>
    <span class="keyword">else</span> 语句<span class="number">2</span>
&lt;!--￼<span class="number">14</span>--&gt;
<span class="keyword">if</span>(表达式 <span class="number">1</span>) 语句 <span class="number">1</span>
<span class="keyword">else</span> <span class="keyword">if</span>(表达式 <span class="number">2</span>) 语句 <span class="number">2</span>
<span class="keyword">else</span> <span class="keyword">if</span>(表达式 <span class="number">3</span>) 语句 <span class="number">3</span>  
 
<span class="keyword">else</span> <span class="keyword">if</span>(表达式 m) 语句 m
<span class="keyword">else</span> 语句 m+<span class="number">1</span>
&lt;!--￼<span class="number">15</span>--&gt;
<span class="keyword">if</span>()
    <span class="keyword">if</span>() 语句 <span class="number">1</span>                 <span class="comment">//内嵌 if</span>
    <span class="keyword">else</span> 语句 <span class="number">2</span>
<span class="keyword">else</span>
    <span class="keyword">if</span>() 语句 <span class="number">3</span>                 <span class="comment">//内嵌 if</span>
    <span class="keyword">else</span> 语句 <span class="number">4</span>

&lt;!--￼<span class="number">16</span>--&gt;
<span class="keyword">switch</span>(表达式)
{
  <span class="keyword">case</span> 常量 <span class="number">1</span>: 语句 <span class="number">1</span>
  <span class="keyword">case</span> 常量 <span class="number">2</span>: 语句 <span class="number">2</span> 
  <span class="keyword">case</span> 常量 n: 语句 n
  <span class="keyword">default</span>: 语句 n+<span class="number">1</span> 
}</code></pre>
</li>
<li><p>和最多一个以 default 开头的行</p>
</li>
<li><p>可以没有 default 标号</p>
</li>
<li><p>每一个 case 常量必须互不相同</p>
</li>
<li><p>连带向下，可用break终止</p>
</li>
<li><p>最后一个 case 子句(今为 default 子句)中可不加 break 语句。</p>
</li>
</ul>
</li>
<li><p><strong>while循环语句</strong></p>
<ul>
<li>while（表达式） 语句</li>
<li>表达式为真时，则执行 while 循环语句。while 循环的特点是先判断条件表达式，后执行循环体语句</li>
</ul>
</li>
<li><p><strong>do…while语句</strong></p>
<ul>
<li>do<br>语句<br>while(表达式);</li>
<li>先无条件地执行循环体，然后判断循环条件是否成立。 <strong>循环至少执行 1 次</strong></li>
</ul>
</li>
<li><p><strong>for循环</strong>                    （while能实现的，for均可实现）</p>
<ul>
<li>for(表达式 1；表达式 2；表达式 3）<ul>
<li>表达式 1: 设置初始条件，只执行一次。可以为零个、一个或多个变量设置初值。</li>
<li>表达式 2: 是循环条件表达式，用来判定是否继续循环。在每次执行循环体前先执行此表达式，决定是否继续执行循环。</li>
<li>表达式 3: 作为循环的调整，例如使循环变量增值，它是在执行完循环体后才进行的。 一般用于知道循环次数用 for 循环。 </li>
</ul>
</li>
<li><strong>for语句执行过程</strong><ul>
<li>求解表达式 1。 </li>
<li>求解表达式 2，若此条件表达式的值为真(非 0)，则执行 for 语句中的循环体，然后执行第(3)步。 若为假(0)，则结束循环，转到第(5)步。 </li>
<li>求解表达式 3。 </li>
<li>转回步骤(2)继续执行。 </li>
<li>循环结束，执行 for 语句下面的一个语句。</li>
</ul>
</li>
<li><strong>for循环注意</strong><ul>
<li>在执行完循环体后，循环变量的值“超过”循环终值，循环结束。</li>
<li>“表达式 1”可以省略，即不设置初值，但表达式 1 后的分号不能省略。<strong>注意</strong>     应在 for 语句之 前给循环变量赋以初值。</li>
<li>表达式 2 也可以省略，即不用表达式 2 来作为循环条件表达式，不设置和检查循环的条件。此时循环 无终止地进行下去,也就是认为表达式 2 始终为真。 <strong>（死循环）</strong></li>
<li>表达式 3 也可以省略</li>
<li>分号不能省略。</li>
</ul>
</li>
<li>改变循环执行的状态    <strong>break 和continun</strong><ul>
<li><strong>break</strong><ul>
<li><strong>用break语句提前终止循环</strong></li>
<li>作用：使流程跳到循环体之外，接着执行循环体下面的语句。 </li>
<li>break 语句只能用于循环语句和 switch 语句之中，而不能单独使用。 </li>
</ul>
</li>
<li><strong>continue</strong><ul>
<li><strong>用 continue 语句提前结束本次循环</strong> </li>
<li>作用：结束本次循环，即跳过循环体中下面尚未执行的语句，转到循环体结束点之前，接着执行 for 语句中的“表达式 3”，然后进行下一次是否执行循环的判定。</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h2><p><strong>怎样定义一维数组</strong></p>
<ul>
<li>数组是一组有序数据的集合。下标代表数据在数组中的序号。</li>
<li>数组中的每一个元素都属于同一个数据类型。</li>
<li>数组必须先定义再使用。</li>
<li>类型符   数组名  [常量表达式]                int a[10]         下标0~9</li>
</ul>
<p><strong>怎样引用一维数组元素</strong></p>
<ul>
<li>数组名 [下标]</li>
<li>只能单个引用，不能一次调用全部元素的值（可用干循环结构一个一个调用）</li>
</ul>
<p><strong>一维数组的赋值</strong></p>
<ul>
<li>用赋值语句对数组元素逐个赋值</li>
<li>采用初始化赋值   （在编译时段定义）int a {，，，，，}<ul>
<li>可以对全部元素赋初值</li>
<li>可以只给部分元素赋初值</li>
</ul>
</li>
<li>动态赋值（scanf（））</li>
<li></li>
</ul>
]]></content>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo的搭建</title>
    <url>/Mr-lee-MQ.hithub.io/2020/05/24/Hexo%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="软件安装及部署"><a href="#软件安装及部署" class="headerlink" title="软件安装及部署"></a>软件安装及部署<a id="more"></a></h1><h2 id="hexo-github-搭建的个人博客"><a href="#hexo-github-搭建的个人博客" class="headerlink" title="hexo + github 搭建的个人博客"></a>hexo + github 搭建的个人博客</h2><p>源于 <a href="https://www.bilibili.com/video/BV1Yb411a7ty" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Yb411a7ty</a></p>
<h2 id="hexo-gitee-搭建的个人博客"><a href="#hexo-gitee-搭建的个人博客" class="headerlink" title="hexo + gitee 搭建的个人博客"></a>hexo + gitee 搭建的个人博客</h2><p>源于 <a href="https://ouwen666.gitee.io/2020/01/29/Hexo+Gitee%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/#more" target="_blank" rel="noopener">https://ouwen666.gitee.io/2020/01/29/Hexo+Gitee%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/#more</a></p>
<h2 id="搭建完成后更换主题"><a href="#搭建完成后更换主题" class="headerlink" title="搭建完成后更换主题"></a>搭建完成后更换主题</h2><ul>
<li>安装主题</li>
</ul>
<p>git clone –depth=1 <a href="https://github.com/JoeyBling/hexo-theme-yilia-plus.git" target="_blank" rel="noopener">https://github.com/JoeyBling/hexo-theme-yilia-plus.git</a> ./yilia-plus</p>
<ul>
<li>配置</li>
</ul>
<p>修改hexo根目录下的 _config.yml ➡️ theme: yilia-plus</p>
<ul>
<li>更新</li>
</ul>
<p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</p>
<p>源于 <a href="https://github.com/JoeyBling/hexo-theme-yilia-plus" target="_blank" rel="noopener">https://github.com/JoeyBling/hexo-theme-yilia-plus</a></p>
<p>用Hexo写一篇博客</p>
<pre><code>$ hexo n &quot;我的第一篇博客&quot;
INFO  Created: E:\bolg\source\_posts\我的第一篇博客.md</code></pre><p>编辑完保存文件，重启Hexo服务</p>
<pre><code> hexo clean          # 清除所有记录 
$ hexo generate       # 生成静态网页 简写：hexo g
$ hexo server         # 启动服务 简写：hexo s</code></pre><p>或者用&amp;&amp;连接起来也可以</p>
<pre><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></pre>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript</title>
    <url>/Mr-lee-MQ.hithub.io/2020/07/24/JavaScript/</url>
    <content><![CDATA[<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript<a id="more"></a></h1><p>JavaScript是一门世界上最流行的脚本语言。</p>
<p>严格区分大小写。</p>
<h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="引入JavaScript"><a href="#引入JavaScript" class="headerlink" title="引入JavaScript"></a>引入JavaScript</h3><ul>
<li>内部标签使用</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">       alert(<span class="string">"Hello,JavaScript"</span>)</span><br><span class="line">   &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>外部引入</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">alert(<span class="string">"Hello,JavaScript"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script src=<span class="string">"js.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br></pre></td></tr></table></figure>

<h3 id="基本语法入门"><a href="#基本语法入门" class="headerlink" title="基本语法入门"></a>基本语法入门</h3><ul>
<li>定义变量</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">变量类型    变量名 = 变量值；</span><br><span class="line"><span class="keyword">var</span> num = <span class="number">1</span>；</span><br><span class="line"><span class="keyword">var</span> name = <span class="string">"liminqiang"</span></span><br></pre></td></tr></table></figure>

<ul>
<li>条件控制</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="number">2</span>&gt;<span class="number">1</span>)&#123;</span><br><span class="line">alert(<span class="string">"true"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>注释</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*     */</span></span><br></pre></td></tr></table></figure>

<ul>
<li>打印变量</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">console.log(score)		&#x2F;*在浏览器的控制台打印变量相当于sout*&#x2F;</span><br></pre></td></tr></table></figure>

<ul>
<li>控制台调试JavaScript<ul>
<li>Elements   :HTML和CSS代码</li>
<li>Console   :控制台（可写JavaScript代码）</li>
<li>Sources   :当前的源码目录<ul>
<li>打断点<ul>
<li>在Sources的源码中点击左侧行数即打断点，然后刷新页面</li>
<li>右上角上下箭头选择</li>
</ul>
</li>
</ul>
</li>
<li>Neteork :网络请求 </li>
<li>Application：相当于web里的数据库</li>
</ul>
</li>
</ul>
<h3 id="数据类型概述"><a href="#数据类型概述" class="headerlink" title="数据类型概述"></a>数据类型概述</h3><p>数值，文本，图形，音频，视频……</p>
<ul>
<li>number</li>
</ul>
<p>js不区分小数跟整数</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="number">123</span><span class="comment">//整数123</span></span><br><span class="line"><span class="number">123.3</span><span class="comment">// 浮点数123.3</span></span><br><span class="line"><span class="number">1.12e3</span><span class="comment">//科学计数法</span></span><br><span class="line"><span class="number">-99</span> <span class="comment">//复数</span></span><br><span class="line"><span class="literal">NaN</span>  <span class="comment">//not a number</span></span><br><span class="line"><span class="literal">Infinity</span>  <span class="comment">//表示无限大</span></span><br></pre></td></tr></table></figure>

<ul>
<li>字符串</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">'abc'</span></span><br><span class="line"><span class="string">"abc"</span></span><br></pre></td></tr></table></figure>

<ul>
<li>布尔值</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="literal">true</span> </span><br><span class="line"><span class="literal">false</span></span><br></pre></td></tr></table></figure>

<ul>
<li>逻辑运算</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&amp;&amp; 两个都为真，结果为真</span><br><span class="line">||一个为真，结果为真</span><br><span class="line">!真既假，假即真</span><br></pre></td></tr></table></figure>

<ul>
<li>比较运算符</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x3D;   赋值</span><br><span class="line">&#x3D;&#x3D;   等于（类型不一样，值一样，也会判断为true）</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;   绝对等于（类型一样，值一样，则为true）</span><br></pre></td></tr></table></figure>

<p>特殊：NaN===NaN，NaN与所有值都不相等，包括自己。</p>
<p>​            只能通过isNaN(NaN)来判断这个数是否是NaN</p>
<p>浮点数问题：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log((<span class="number">1</span>/<span class="number">3</span>)===(<span class="number">1</span><span class="number">-2</span>/<span class="number">3</span>))</span><br></pre></td></tr></table></figure>

<p>尽量避免使用浮点数进行运算，存在精度问题。</p>
<p>可用Math.abs解决</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.abs(<span class="number">1</span>/<span class="number">3</span>-(<span class="number">1</span><span class="number">-2</span>/<span class="number">3</span>))&lt;<span class="number">0.00000001</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>null和undefined</p>
<ul>
<li>null空</li>
<li>undefined未定义</li>
</ul>
</li>
<li><p>数组</p>
</li>
</ul>
<p>Java中必须是一系列类型相同的对象,JS中不需要</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="string">"hello"</span>,<span class="literal">null</span>,<span class="literal">true</span>]</span><br></pre></td></tr></table></figure>

<p>为保证代码的可读性数组尽量用[   ],对象则用{   }</p>
<p>取数组下标，如果越界，则为undefined。</p>
<ul>
<li>对象</li>
</ul>
<p>对象是大括号，数组是中括号。每个属性用逗号隔开，最后一个不用加。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">varperson=&#123;</span><br><span class="line">    </span><br><span class="line">    name:<span class="string">"limin"</span>,</span><br><span class="line">    age:<span class="number">14</span>,	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>取对象的值</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">调用：person.name</span><br><span class="line">		limin</span><br></pre></td></tr></table></figure>

<p>严格检查模式   use strict</p>
<ul>
<li><p>放第一行。</p>
</li>
<li><p>预防JavaScript的随意性导致产生一些问题。</p>
</li>
<li><p>局部变量都用let去定义。</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> i = <span class="number">1</span> ;</span><br></pre></td></tr></table></figure>

<h2 id="数据类型详解"><a href="#数据类型详解" class="headerlink" title="数据类型详解"></a>数据类型详解</h2><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ul>
<li>正常的字符串我们用单引号，或双引号包裹</li>
<li>注意转义字符 \</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\&#39;</span><br><span class="line">\n</span><br><span class="line">\t</span><br><span class="line">\u4e2d</span><br><span class="line">\u####</span><br><span class="line">unicode字符</span><br><span class="line">\x41   Ascll字符</span><br></pre></td></tr></table></figure>

<ul>
<li>多行字符串编写</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//tab上面的  esc键下面</span></span><br><span class="line"><span class="keyword">var</span> msg=</span><br><span class="line">    <span class="string">`hello</span></span><br><span class="line"><span class="string">world</span></span><br><span class="line"><span class="string">你好呀</span></span><br><span class="line"><span class="string">你好</span></span><br></pre></td></tr></table></figure>

<ul>
<li>模板字符串</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//tab上面 esc下面</span></span><br><span class="line"><span class="keyword">let</span> name = <span class="string">"qinjiang"</span>;</span><br><span class="line"><span class="keyword">let</span> age = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> msg = <span class="string">`你好呀，<span class="subst">$&#123;name&#125;</span>`</span></span><br></pre></td></tr></table></figure>

<ul>
<li>字符串长度</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(str.length)</span><br></pre></td></tr></table></figure>

<ul>
<li>字符串的可变性，不可变</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">console.log(student[<span class="number">0</span>])</span><br><span class="line">    s</span><br><span class="line">student[<span class="number">0</span>]= <span class="number">1</span></span><br><span class="line">    <span class="number">1</span></span><br><span class="line">console.leg(student)</span><br><span class="line">    student</span><br></pre></td></tr></table></figure>

<ul>
<li>大小写转换</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;注意，这里是方法，不是属性</span><br><span class="line">student.toUpperCase()</span><br><span class="line">student.toLowerCase()</span><br></pre></td></tr></table></figure>

<ul>
<li>student.indexOf(‘t’)    获取指令的下标</li>
<li>substring</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//包含前面，不包含后面</span></span><br><span class="line">student.substring(<span class="number">1</span>)  <span class="comment">//从第一个字符串截取到最后一个字符串</span></span><br><span class="line">student.substring(<span class="number">1</span>,<span class="number">3</span>)   <span class="comment">//[1)</span></span><br></pre></td></tr></table></figure>

<h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>Array可以包含任意的数据类型</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr= [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br></pre></td></tr></table></figure>

<ul>
<li>长度</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">arr.length</span><br></pre></td></tr></table></figure>

<p>注意：假如给arr.length赋值，则数组大小就会发生变化。如果赋值过小，元素会丢失。</p>
<ul>
<li>indexOf   通过元素获得下标索引。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">arr.indexOf(<span class="number">2</span>)</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>字符串的“1”和数字1是不同的</p>
<ul>
<li>slice（）截取Array的一部分，返回一个新数组，类似于String中的substring</li>
<li>push（） , pop（）</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">push:  压入到尾部</span><br><span class="line">pop:  弹出尾部的一个元素</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr= [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">arr.push(<span class="string">'a'</span>,<span class="string">'b'</span>)</span><br><span class="line">arr;</span><br><span class="line"><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="string">"a"</span>,<span class="string">"b"</span></span><br><span class="line"></span><br><span class="line">arr.pop()</span><br><span class="line">arr;</span><br><span class="line"><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="string">"a"</span></span><br></pre></td></tr></table></figure>

<ul>
<li>unshift(),   shift()头部</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">unshift:  压入到头部</span><br><span class="line">shift:  弹出头部的一个元素</span><br></pre></td></tr></table></figure>

<ul>
<li>sort  排序        </li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="number">3</span>)[<span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"A"</span>]</span><br><span class="line">arr.sort()</span><br><span class="line">(<span class="number">3</span>)[<span class="string">"A"</span>,<span class="string">"B"</span>,<span class="string">"C"</span>]</span><br></pre></td></tr></table></figure>

<ul>
<li>reverse()     元素反转</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="number">3</span>)[<span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"A"</span>]</span><br><span class="line">arr.reverse()</span><br><span class="line">(<span class="number">3</span>)[<span class="string">"C"</span>,<span class="string">"B"</span>,<span class="string">"A"</span>]</span><br></pre></td></tr></table></figure>

<ul>
<li>concat()</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="number">3</span>)[<span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"A"</span>]</span><br><span class="line">arr.concat([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">(<span class="number">6</span>)[<span class="string">"C"</span>,<span class="string">"B"</span>,<span class="string">"A"</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">arr</span><br><span class="line">(<span class="number">3</span>)[<span class="string">"C"</span>,<span class="string">"B"</span>,<span class="string">"A"</span>]</span><br></pre></td></tr></table></figure>

<p>注意：concat（）并没有修改数组，只是会返回了一个新的数组</p>
<ul>
<li>连接符   join</li>
</ul>
<p>打印拼接数组，使用特定的字符串连接</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="number">3</span>)[<span class="string">"C"</span>,<span class="string">"B"</span>,<span class="string">"A"</span>]</span><br><span class="line">arr.join(<span class="string">'-'</span>)</span><br><span class="line"><span class="string">"C-B-A"</span></span><br></pre></td></tr></table></figure>

<ul>
<li>多维数组</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">arr = [[<span class="number">1</span>,<span class="number">2</span>][<span class="number">3</span>,<span class="number">4</span>][<span class="string">"5"</span>,<span class="string">"6"</span>]];</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">1</span>]</span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure>

<p>数组：存储数据（如何存，如何取，方法可以自己实现！）</p>
<h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p>若干个键值对</p>
<p>JavaScript中的所有的键都是字符串，值是任意对象</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> 对象名= &#123;</span><br><span class="line">    属性名：属性值，</span><br><span class="line">    属性名：属性值，</span><br><span class="line">    属性名：属性值</span><br><span class="line">&#125;</span><br><span class="line">定义了一个person对象，它有<span class="number">4</span>个属性</span><br><span class="line"><span class="keyword">var</span> person=&#123;</span><br><span class="line">    name:<span class="string">"kuangshen"</span>,</span><br><span class="line">    age:<span class="number">3</span>,</span><br><span class="line">    email:<span class="string">"2285051311@qq.com"</span>,</span><br><span class="line">    score:<span class="number">0</span>  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>JS中对象，{…..}表示一个对象，键值对描述属性XXX：XXXX，多个属性之间使用逗号隔开，最后一个属性不加逗号！</p>
<ul>
<li>对象赋值</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">person.name = <span class="string">"qinjiang"</span></span><br><span class="line"><span class="string">"qinjiang"</span></span><br><span class="line">person.name</span><br><span class="line"><span class="string">"qinjiang"</span></span><br></pre></td></tr></table></figure>

<ul>
<li>使用一个不存在的对象属性，不会报错！undefined</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">person.haha</span><br><span class="line"><span class="literal">undefined</span></span><br></pre></td></tr></table></figure>

<ul>
<li>动态的删减属性，通过delete删除对象的属性</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> person.name</span><br><span class="line">ture</span><br></pre></td></tr></table></figure>

<ul>
<li>动态的添加,直接给新的属性添加值即可</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">person.haha = <span class="string">"haha"</span></span><br><span class="line"><span class="string">"haha"</span></span><br><span class="line">person</span><br></pre></td></tr></table></figure>

<ul>
<li>判断属性值是否在这个对象中！XXX  in   XXX</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">'age'</span> <span class="keyword">in</span> person</span><br><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="comment">//继承</span></span><br><span class="line"><span class="string">'toString'</span>  <span class="keyword">in</span>  person</span><br><span class="line"><span class="literal">true</span></span><br></pre></td></tr></table></figure>

<ul>
<li>判断一个属性是否是这个对象拥有的。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">person.hasOwnProperty(<span class="string">'toString'</span>)</span><br><span class="line"><span class="literal">false</span></span><br><span class="line">person.hasOwnProperty(<span class="string">'age'</span>)</span><br><span class="line"><span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><ul>
<li>if判断</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(age&gt;<span class="number">3</span>)&#123;</span><br><span class="line">    alert(<span class="string">"haha"</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        alert(<span class="string">"kuwa~"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>while循环，避免程序死循环</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(age&lt;<span class="number">100</span>)&#123;</span><br><span class="line">    age = age +<span class="number">1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(age)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//do  while 循环</span></span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    age = age + <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(age)</span><br><span class="line">&#125;<span class="keyword">while</span>(age&lt;<span class="number">100</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>for循环</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>forEach循环</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = [<span class="number">12</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">31</span>,<span class="number">23</span>,<span class="number">123</span>];</span><br><span class="line"><span class="comment">//函数</span></span><br><span class="line">age.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">value</span>))</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(value)</span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure>

<ul>
<li>for…..in</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//for(var index in object)&#123;&#125;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> num <span class="keyword">in</span> age)&#123;</span><br><span class="line"><span class="keyword">if</span>(age.hasownProperty(num))&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"存在"</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(age[num])</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Map和Set"><a href="#Map和Set" class="headerlink" title="Map和Set"></a>Map和Set</h3><p>ES6的新特性</p>
<ul>
<li>Map</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Map</span></span><br><span class="line"><span class="comment">//学生的成绩，学生的名字</span></span><br><span class="line"><span class="comment">//var names = ["tom","jack","haha"];</span></span><br><span class="line"><span class="comment">//var scores = [100,90,80];</span></span><br><span class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="string">'tom'</span>,<span class="number">100</span>],[<span class="string">'jack'</span>,<span class="number">90</span>][<span class="string">'haha'</span>,<span class="number">80</span>]]);</span><br><span class="line"><span class="keyword">var</span> name = map.get(<span class="string">'tom'</span>);</span><br><span class="line">map.get(<span class="string">'admin'</span>,<span class="number">123456</span>);</span><br><span class="line">map.delete(<span class="string">"tom"</span>);   <span class="comment">//删除</span></span><br></pre></td></tr></table></figure>

<ul>
<li>Set：无序不重复的集合</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Set可以去重 </span></span><br><span class="line"><span class="keyword">var</span> <span class="keyword">set</span> = new Set([3,1,1,1,]);</span><br><span class="line"><span class="keyword">set</span>.add(2);   //添加</span><br><span class="line"><span class="keyword">set</span>.delete(1);  //删除</span><br><span class="line">console.log(<span class="keyword">set</span>.has(3))   //是否包含某个元素</span><br></pre></td></tr></table></figure>

<h3 id="inerator"><a href="#inerator" class="headerlink" title="inerator"></a>inerator</h3><p>遍历数组</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//通过for of /for  in   下标</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> x <span class="keyword">of</span> arr)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>遍历Map</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="string">"tom"</span>,<span class="number">100</span>],[<span class="string">"jack"</span>,<span class="number">90</span>],[<span class="string">"haha"</span>,<span class="number">80</span>]]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> x <span class="keyword">of</span> map)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>遍历set</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="keyword">set</span> = new Set([5,6,7]);</span><br><span class="line">for (let x of <span class="keyword">set</span>)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h3><p>绝对值函数</p>
<blockquote>
<p>定义方式一</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">funstion abs(x)&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>一旦执行到return代表函数结束，返回结果。如果没有执行return，函数执行完也会返回结果，结果是undefined</p>
<blockquote>
<p>定义方式二</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(x&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>function(x){……}这是一个匿名函数。但是可以把结果赋值给abs，通过abs就可以调用函数。</p>
<ul>
<li>调用函数</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">abs(<span class="number">10</span>)</span><br><span class="line">abs(<span class="number">-10</span>)</span><br></pre></td></tr></table></figure>

<p>参数问题JS可以传任意个参数，也可以不传参数。</p>
<ul>
<li>假设不存在参数，如何规避？</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = funstion(x)&#123;</span><br><span class="line">    <span class="comment">//手动抛出异常判断</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> x !==<span class="string">'number'</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="string">'Not a number'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>argument</li>
</ul>
<p>argument是Js的关键字，代表传递进来的所有参数，是一个数组。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = funstion(x)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"X=&gt;"</span>+x);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i =<span class="number">0</span>;i&lt;argument.length;i++)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(argument[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>问题：argument包含所有的参数，我们有时候想使用多余的参数来进行附加操作。需要排除已有的参数。</p>
<ul>
<li>rest</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(argument.length&gt;<span class="number">2</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">2</span>;i&lt;armument.length;i++)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ES6引入的新特性，获取除了已经定义的参数之外的所有参数</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">funstion aaa(a,b,.....rest)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"a=&gt;"</span>+a);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"b=&gt;"</span>+b);</span><br><span class="line">    <span class="built_in">console</span>.log(rest);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>rest 参数只能写在最后面，必须用…..标识。</p>
<h3 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h3><p>在Java Script中，var定义变量实际是有作用域的。</p>
<p>假设在函数体中声明，则在函数体外不可以使用（闭包）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qj</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">    x = x + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">x = x + <span class="number">2</span>;</span><br></pre></td></tr></table></figure>



<p>如果两个函数使用了相同的变量名，只要在函数内部，就不冲突。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qj</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">    x = x + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qj2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="string">'A'</span>;</span><br><span class="line">    x = x + <span class="number">1</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<blockquote>
<p>内部函数可以访问外部函数的成员，反之则不行。</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">funstion qj()&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">qj2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> y = x + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> z = y + <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<blockquote>
<p>假设，内部函数变量和外部函数变量重名</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qj</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">qj2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'inner'</span>+ x );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'outter'</span> + X );</span><br><span class="line">    qj2()</span><br><span class="line">&#125;</span><br><span class="line">qj()</span><br></pre></td></tr></table></figure>

<p>假设JavaScript中函数查找变量从自身函数开始，由内向外查找，假设外部存在这个同名的函数变量，则内部函数会屏蔽外部函数的变量。</p>
<blockquote>
<p>提升变量的作用域</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qj</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="string">"x"</span> + y;</span><br><span class="line">    <span class="built_in">console</span>.log(x);</span><br><span class="line">    <span class="keyword">var</span> y = <span class="string">'y'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结果：xundefined</span></span><br><span class="line">说明JS执行引擎，自动提升了y的声明，但不会提升变量y的赋值</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">qj2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> y;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="string">"x"</span> + y;</span><br><span class="line">    <span class="built_in">console</span>.log(x);</span><br><span class="line">    y = <span class="string">'y'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//即所有的变量定义都放在函数的头部</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>全局函数</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//全局变量</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br><span class="line">f();</span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br></pre></td></tr></table></figure>

<p>全局对象    window</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="string">'xxx'</span>;</span><br><span class="line">alret(x);</span><br><span class="line">zlert(<span class="built_in">window</span>.x);</span><br></pre></td></tr></table></figure>

<p>alert()本身也是window的一个变量</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">vsar x = <span class="string">'xxx'</span>;</span><br><span class="line"><span class="built_in">window</span>.alert(x);</span><br><span class="line"><span class="keyword">var</span> old_alert = <span class="built_in">window</span>.alert;</span><br><span class="line"><span class="comment">//old_alert</span></span><br><span class="line"><span class="built_in">window</span>.alert = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//发现alert()失效了。</span></span><br><span class="line"><span class="built_in">window</span>.alert(<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//恢复</span></span><br><span class="line"><span class="built_in">window</span>.alert = old_alert;</span><br><span class="line"><span class="built_in">window</span>.alert(<span class="number">456</span>);</span><br></pre></td></tr></table></figure>

<p>JavaScript实际上只有一个全局作用域，任何变量（函数也可以视为变量），假设没有在函数的作用范围内找到，就会向外查找，如果在全局作用域都没有找到，报错（ReferenceError）引用异常.</p>
<blockquote>
<p>规范</p>
</blockquote>
<p>由于我们所有的全局变量都会绑在我们的window上，如果不停的JS文件，使用了相同的全局变量，冲突—&gt;如何减少冲突。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//唯一全局变量</span></span><br><span class="line"><span class="keyword">var</span> KuangApp = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义全局变量</span></span><br><span class="line">KuangApp.name = <span class="string">'kuangshen'</span>;</span><br><span class="line">KuangApp.add = <span class="function"><span class="keyword">function</span>(<span class="params"> a , b </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>把自己的代码全部放到自己定义的唯一空间名字中，降低全局冲突的问题</p>
<ul>
<li>局部定义域  let</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aaa</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i) </span><br><span class="line">    &#125;</span><br><span class="line">   <span class="built_in">console</span>.log(i + <span class="number">1</span>)</span><br><span class="line">&#125;                <span class="comment">//i出了作用域还可以使用</span></span><br></pre></td></tr></table></figure>

<p>ES6 let关键字，解决局部作用域冲突问题。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aaa</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i) </span><br><span class="line">    &#125;</span><br><span class="line">   <span class="built_in">console</span>.log(i + <span class="number">1</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>常量 const</li>
</ul>
<p>在ES6之前，怎么定义常量：只有用全部大写字母命名的变量就是常量。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> PI = <span class="string">'3.14'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(PI);</span><br><span class="line">PI = <span class="string">'213'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(PI);</span><br></pre></td></tr></table></figure>

<p>在ES6引用关键字   const   </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> PI = <span class="string">'3.14'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(PI);</span><br><span class="line">PI = <span class="string">'213'</span>;</span><br></pre></td></tr></table></figure>

<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul>
<li>定义方法：方法就是把函数放在对象里面，对象只有两个东西：属性和方法</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> kuangshen = &#123;</span><br><span class="line">    name:<span class="string">'秦疆'</span>；</span><br><span class="line">    birth: <span class="number">2000</span>;</span><br><span class="line">    <span class="comment">//方法</span></span><br><span class="line">    age:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//今年-出生的年</span></span><br><span class="line">        <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear();</span><br><span class="line">        <span class="keyword">return</span> now - <span class="keyword">this</span>.birth;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    kuangshen.name</span><br><span class="line">	<span class="comment">//方法，一定带括号()</span></span><br><span class="line">	kuangshen.age()</span><br></pre></td></tr></table></figure>

<p>this代表什么？拆开上面的代码看看</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getAge</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//今年-出生的年</span></span><br><span class="line">    <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear();</span><br><span class="line">    <span class="keyword">return</span> now - <span class="keyword">this</span>.birth;</span><br><span class="line">&#125;</span><br><span class="line">	<span class="keyword">var</span> kuangshen = &#123;</span><br><span class="line">        name:<span class="string">'秦疆'</span>，</span><br><span class="line">        birth:<span class="number">2000</span>,</span><br><span class="line">        age:getAge</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//调用kuangshen.age()   ok</span></span><br><span class="line">    <span class="comment">//getAge() NaN</span></span><br></pre></td></tr></table></figure>

<p>this 是无法指向的，是默认指向调用它的那个对象；</p>
<ul>
<li>apply</li>
</ul>
<p>在JS中可以控制this的指向</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getAge</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//今年-出生的年</span></span><br><span class="line">    <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear();</span><br><span class="line">    <span class="keyword">return</span> now - <span class="keyword">this</span>.birth;</span><br><span class="line">&#125;</span><br><span class="line">	<span class="keyword">var</span> kuangshen = &#123;</span><br><span class="line">        name:<span class="string">'秦疆'</span>，</span><br><span class="line">        birth:<span class="number">2000</span>,</span><br><span class="line">        age:getAge</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    getAge.apply(kuangshen,[]);</span><br><span class="line"><span class="comment">//this.指向了kuangshen. 参数为空</span></span><br></pre></td></tr></table></figure>

<h2 id="内部对象"><a href="#内部对象" class="headerlink" title="内部对象"></a>内部对象</h2><ul>
<li>标准对象</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="number">123</span></span><br><span class="line"><span class="string">"number"</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="string">'123'</span></span><br><span class="line"><span class="string">"string"</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">true</span></span><br><span class="line"><span class="string">"boolean"</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">NaN</span></span><br><span class="line"><span class="string">"number"</span></span><br><span class="line"><span class="keyword">typeof</span> []</span><br><span class="line"><span class="string">"object"</span></span><br><span class="line"><span class="keyword">typeof</span> &#123;&#125;</span><br><span class="line"><span class="string">"object"</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Math</span>.abs</span><br><span class="line"><span class="string">"function"</span></span><br></pre></td></tr></table></figure>

<ul>
<li>Date</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">now.getFullYear();<span class="comment">//年</span></span><br><span class="line">now.getMonth();<span class="comment">//月</span></span><br><span class="line">now.getDate();<span class="comment">//日</span></span><br><span class="line">now.getDay();<span class="comment">//星期几</span></span><br><span class="line">now.getHours();<span class="comment">//时</span></span><br><span class="line">now.getMinutes();<span class="comment">//分</span></span><br><span class="line">now.getSeconds();<span class="comment">//秒</span></span><br><span class="line"></span><br><span class="line">now.getTime();<span class="comment">//时间戳</span></span><br></pre></td></tr></table></figure>

<h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h3><ul>
<li>定义：<ul>
<li><a href="https://baike.baidu.com/item/JSON" target="_blank" rel="noopener">JSON</a>(<a href="https://baike.baidu.com/item/JavaScript" target="_blank" rel="noopener">JavaScript</a> Object Notation, JS 对象简谱) 是一种轻量级的数据交换格式。</li>
<li>简洁和清晰的<strong>层次结构</strong>使得 JSON 成为理想的数据交换语言。</li>
<li>易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。</li>
</ul>
</li>
</ul>
<p>在JavaScript一切皆为对象，任何JS支持的类型都可以用JSON来表示。</p>
<p>格式：</p>
<ul>
<li>对象都用{}</li>
<li>数组都用[]</li>
<li>所有的键值对都用keyy:value</li>
</ul>
<p>JSON字符串和JS对象的转化</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> user = &#123;</span><br><span class="line">    name:<span class="string">"qinjiang"</span>,</span><br><span class="line">    age:<span class="number">3</span>,</span><br><span class="line">    sex:<span class="string">'男'</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//对象转化为json字符串&#123;"name":"qinjiang","age":3,"sex":"男"&#125;</span></span><br><span class="line">    <span class="keyword">var</span> jsonUser = <span class="built_in">JSON</span>.stringify(user);</span><br><span class="line">	<span class="comment">//json字符串转化为对象，参数为json字符串</span></span><br><span class="line">	<span class="keyword">var</span> obj = 						      						<span class="built_in">JSON</span>.parse(<span class="string">'&#123;"name":"qinjiang","age":3,"sex":"男"&#125;'</span>);</span><br></pre></td></tr></table></figure>

<h3 id="Ajax简述"><a href="#Ajax简述" class="headerlink" title="Ajax简述"></a>Ajax简述</h3><ul>
<li>原生的js写法   xhr异步请求</li>
<li>jQury封装好的方法    $(“#name”)ajax(“”)</li>
<li>axios请求</li>
</ul>
<h2 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h2><ul>
<li><p>类：一个模板     (原型对象)</p>
</li>
<li><p>对象：具体的实例</p>
</li>
</ul>
<h3 id="原型继承"><a href="#原型继承" class="headerlink" title="原型继承"></a>原型继承</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> Student = &#123;</span><br><span class="line">        name:<span class="string">"qinjiang"</span>,</span><br><span class="line">        age: <span class="number">3</span>,</span><br><span class="line">        run: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="keyword">this</span>.name + <span class="string">"run...."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">	<span class="keyword">var</span> xiaoming = &#123;</span><br><span class="line">        name:<span class="string">"xiaoming"</span></span><br><span class="line">    &#125;;</span><br><span class="line">	<span class="keyword">var</span> Bird = &#123;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//小明的原型是Student</span></span><br><span class="line">    xiaoming._proto_ = Student;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Class继承"><a href="#Class继承" class="headerlink" title="Class继承"></a>Class继承</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//给student新增一个方法</span></span><br><span class="line">Student.prototype.hello = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    slert(<span class="string">'Hello'</span>)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//ES6之后</span></span><br><span class="line"><span class="comment">//定义一个学生的类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(name)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;	</span><br><span class="line">	hello()&#123;</span><br><span class="line">        alert(<span class="string">'hello'</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>继承</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line">Student.prototype.hello = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    slert(<span class="string">'Hello'</span>)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(name)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;	</span><br><span class="line">	hello()&#123;</span><br><span class="line">        alert(<span class="string">'hello'</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Xiaostudent</span> <span class="title">extend</span> <span class="title">student</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(name,grade)&#123;</span><br><span class="line">        <span class="keyword">super</span>(name);</span><br><span class="line">        <span class="keyword">this</span>.grade = grade;</span><br><span class="line">    &#125;</span><br><span class="line">    myGrade()&#123;</span><br><span class="line">        alert(<span class="string">'我是一名小学生'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> xiaoming = <span class="keyword">new</span> student(<span class="string">"xiaoming"</span>);</span><br><span class="line"><span class="keyword">var</span> xiaohong = <span class="keyword">new</span> Xiaostudent(<span class="string">"xiaohong"</span>,<span class="number">1</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p>本质：查看对象原型</p>
<h2 id="操作BOM对象"><a href="#操作BOM对象" class="headerlink" title="操作BOM对象"></a>操作BOM对象</h2><p>JavaScript和浏览器的关系？</p>
<p>JavaScript诞生就是为了能够让他在浏览器中运行</p>
<p>BOM：浏览器对象模型</p>
<ul>
<li>IE6~11</li>
<li>Chrome</li>
<li>Safari</li>
<li>FireFox</li>
</ul>
<blockquote>
<p>window</p>
</blockquote>
<p>window 代表 浏览器窗口</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.alert(<span class="number">1</span>)</span><br><span class="line"><span class="literal">undefined</span></span><br><span class="line"><span class="built_in">window</span>.innerHeight	<span class="comment">//内部高度</span></span><br><span class="line"><span class="number">258</span></span><br><span class="line"><span class="built_in">window</span>.innerWidth	<span class="comment">//内部宽度</span></span><br><span class="line"><span class="number">919</span></span><br><span class="line"><span class="built_in">window</span>.outerHeight	<span class="comment">//外部高度</span></span><br><span class="line"><span class="number">325</span></span><br><span class="line"><span class="built_in">window</span>.outerrWidth	<span class="comment">//外部宽度</span></span><br><span class="line"><span class="number">919</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>Navigator</p>
</blockquote>
<p>Navigator,封装了浏览器的信息</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">navigator.appName    <span class="comment">//浏览器名称</span></span><br><span class="line">navigator.appVersion    <span class="comment">//版本号</span></span><br><span class="line">navigator.userAgent    <span class="comment">//用户信息</span></span><br><span class="line">navigator.platform    <span class="comment">//系统版本</span></span><br></pre></td></tr></table></figure>

<p>大多数时候不使用navigator对象，因为可能会被人为修改。不建议使用这些属性来判断和编写代码。</p>
<blockquote>
<p>screen</p>
</blockquote>
<p>屏幕尺寸</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">screen.width</span><br><span class="line"><span class="number">1920</span></span><br><span class="line">screen.height</span><br><span class="line"><span class="number">1080</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>location</p>
</blockquote>
<p>location代表当前页面的URL信息</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">host:<span class="string">"www.baidu.com"</span></span><br><span class="line">href:<span class="string">"https://www.baidu.com/"</span></span><br><span class="line">protocol:<span class="string">"https:"</span></span><br><span class="line">reload:f reload()<span class="comment">//刷新网页</span></span><br><span class="line">location.assign(<span class="string">"https://blog.kuangstudy.com/"</span>)设置新的地址</span><br></pre></td></tr></table></figure>

<blockquote>
<p>document （文本内容）</p>
</blockquote>
<p>document代表当前的页面，HTML DOM文档树</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.title</span><br><span class="line"><span class="string">"百度一下，你就知道"</span></span><br><span class="line"><span class="built_in">document</span>.title = <span class="string">'狂神说'</span></span><br><span class="line"><span class="string">"狂神说"</span></span><br></pre></td></tr></table></figure>

<p>获取具体的文档数节点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dl id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">	&lt;dt&gt;Java&lt;&#x2F;dt&gt;</span><br><span class="line">	&lt;dt&gt;JavaSE&lt;&#x2F;dt&gt;</span><br><span class="line">	&lt;dt&gt;JavaEE&lt;&#x2F;dt&gt;</span><br><span class="line">&lt;&#x2F;dl&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">	var dl &#x3D; document.getElementById(&#39;app&#39;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p>获取cookie</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.cookie</span><br></pre></td></tr></table></figure>

<p>劫持cookie原理</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script src = <span class="string">"aa.js"</span>&gt;&lt;<span class="regexp">/stript&gt;</span></span><br><span class="line"><span class="regexp">&lt;!--恶意人员：获取你的cooike上传到他的服务器 --&gt;</span></span><br></pre></td></tr></table></figure>

<p>服务端可以设置 cooike为httpOnly</p>
<blockquote>
<p>history</p>
</blockquote>
<p>history代表浏览器的历史记录</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">history.back()  <span class="comment">//后退</span></span><br><span class="line">history.forward()  <span class="comment">//前进</span></span><br></pre></td></tr></table></figure>

<h2 id="操作DOM"><a href="#操作DOM" class="headerlink" title="操作DOM"></a>操作DOM</h2><p>DOM：文本对象模型</p>
<p>核心：</p>
<ul>
<li>更新：更新    Dom节点</li>
<li>遍历Dom节点：得到Dom节点</li>
<li>删除：删除一个Dom节点</li>
<li>添加：添加一个新的节点</li>
</ul>
<p>要操作一个Dom节点，就必须要先获得这个Dom节点</p>
<blockquote>
<p>获得Dom节点</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;h1&gt;标题一&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">&lt;p id = "p1"&gt;p1&lt;/</span>p&gt;</span><br><span class="line">&lt;p <span class="class"><span class="keyword">class</span> </span>= <span class="string">"p2"</span>&gt;p2&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/获得dom节点   标签</span></span><br><span class="line"><span class="regexp">var h1 = document.getElementsByTagName('h1')</span></span><br><span class="line"><span class="regexp">var p1 = document.getElementsById('p1')</span></span><br><span class="line"><span class="regexp">var p2 = document.getElementsByClassName('h1')</span></span><br></pre></td></tr></table></figure>

<p>这是原生代码，之后一般会使用JQuery</p>
<blockquote>
<p>更新节点</p>
</blockquote>
<p>操作文本</p>
<ul>
<li>innerText 修改文本值</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">id1.innerText = <span class="string">'456'</span></span><br></pre></td></tr></table></figure>

<ul>
<li>可以解析HTML文本标签</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">id1.innrtHTML = <span class="string">'&lt;strong&gt;123&lt;/strong&gt;'</span></span><br></pre></td></tr></table></figure>

<p>操作JS</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">id1.style.color = <span class="string">'yellow'</span>;</span><br><span class="line">id1.style.fontSize = <span class="string">'20px'</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>删除节点</p>
</blockquote>
<p>删除节点的步骤：先获取父节点，在通过父节点删除自己</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div id =<span class="string">"father"</span>&gt;</span><br><span class="line">	&lt;h1&gt;标题一&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">	&lt;p id = "p1"&gt;p1&lt;/</span>p&gt;</span><br><span class="line">	&lt;p <span class="class"><span class="keyword">class</span> </span>= <span class="string">"p2"</span>&gt;p2&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">father.removeChild(p1)</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除是一个动态的过程</span></span><br><span class="line">father.removeChild(father.children[<span class="number">0</span>])</span><br><span class="line">father.removeChild(father.children[<span class="number">1</span>])</span><br><span class="line">father.removeChild(father.children[<span class="number">2</span>])</span><br></pre></td></tr></table></figure>

<p>注意：删除多个节点的时候，children是在时刻变化的，删除节点的时候一定要注意</p>
<blockquote>
<p>插入节点</p>
</blockquote>
<p>我们获得了某个DOM节点，假设这个DOM节点是空的，我们通过innerHTML就可以增加一个元素，但是这个DOM节点已经存在元素了，就不能这么做了，会产生覆盖。</p>
<ul>
<li>追加    appendChild</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;p id = <span class="string">'js'</span>&gt;JavaScript&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;div id = 'list'&gt;</span></span><br><span class="line"><span class="regexp">    &lt;p id = "se"&gt;JavaSE&lt;/</span>p&gt;</span><br><span class="line">	&lt;p id = <span class="string">"ee"</span>&gt;JavaEE&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">	&lt;p id = "me"&gt;JavaME&lt;/</span>p&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">        var js = docoment.getElmentById('js');</span></span><br><span class="line"><span class="regexp">		var list = docoment.getElmentById('list');</span></span><br><span class="line"><span class="regexp">		list.appendChild(js);/</span><span class="regexp">/追加到后面</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>创建一个新的标签,实现插入    document.createElement</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> js = <span class="built_in">document</span>.getElementById(<span class="string">'js'</span>);   <span class="comment">//已经存在的节点</span></span><br><span class="line">	<span class="keyword">var</span> list = <span class="built_in">document</span>.getElementById(<span class="string">'list'</span>);</span><br><span class="line"><span class="comment">// 通过JS创建一个新的节点</span></span><br><span class="line">	<span class="keyword">var</span> newP = <span class="built_in">document</span>.createElement(<span class="string">'p'</span>);<span class="comment">//创建一个P标签</span></span><br><span class="line">	newP.id = <span class="string">'newP'</span>;</span><br><span class="line">	newP.innerText = <span class="string">'Helllo,kuangshen'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个标签节点</span></span><br><span class="line">	<span class="keyword">var</span> myScript = <span class="built_in">document</span>.creatElement(<span class="string">'script'</span>);</span><br><span class="line">	myScript.setAttribute(<span class="string">'type'</span>,<span class="string">'text/css'</span>);</span><br><span class="line"><span class="comment">//可以创建一个style标签</span></span><br><span class="line"><span class="keyword">var</span> myStyle = <span class="built_in">document</span>.creatElement(<span class="string">'style'</span>);<span class="comment">//创建了一个空style</span></span><br><span class="line">myStyle.setAttribute(<span class="string">'type'</span>,<span class="string">'text/css'</span>);</span><br><span class="line">myStyle.innerHTML = <span class="string">'body&#123;background-color;chartreuse;&#125;'</span>;<span class="comment">//设置标签内容</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>].appengchild(myStyle)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="操作表单（验证）"><a href="#操作表单（验证）" class="headerlink" title="操作表单（验证）"></a>操作表单（验证）</h2><blockquote>
<p>表单是什么     form  DOM树</p>
</blockquote>
<ul>
<li>文本框    text</li>
<li>下拉框     select</li>
<li>单选框      radio</li>
<li>多选框      checkbox</li>
<li>隐藏域      hidden</li>
<li>密码框      password</li>
<li>……….</li>
</ul>
<p>表单的目的：提交信息</p>
<blockquote>
<p>获得要提交的信息</p>
</blockquote>
<ul>
<li>得到输入框的值      input_text.value</li>
<li>修改输入框的值       input_text.value = ‘123’</li>
<li>对于单选框，多选框等等固定的值，boy_radio.value只能取到当前的值，</li>
<li>查看返回的结果       boy_radio.checked;      </li>
</ul>
<p>提交表单</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;form action=<span class="string">"post"</span>&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">    	&lt;span&gt;用户名：&lt;span&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"username"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">	&lt;p&gt;</span><br><span class="line">    	&lt;span&gt;密码：&lt;span&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"password"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="comment">//绑定事件   onclick  被点击</span></span><br><span class="line">	&lt;button type=<span class="string">"button"</span> onclick=<span class="string">"aaa()"</span>&gt;提交&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>form&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">aaa</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="JQuery"><a href="#JQuery" class="headerlink" title="JQuery"></a>JQuery</h2><p>JavaScript</p>
<p>JQuery库，里面存在大量的javascript函数</p>
<blockquote>
<p>获取JQuery</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>= <span class="string">"&lt;script src="</span><span class="attr">http:</span>//<span class="attr">code.jquery.com</span>/<span class="attr">jquery-migrate-1.2.1.min.js</span>"&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>"&gt;</span><br></pre></td></tr></table></figure>

<p>公式：</p>
<p>$(selector   选择器).action()</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">两种方法</span><br><span class="line"></span><br><span class="line">&lt;a href=<span class="string">""</span> id=<span class="string">"test-jquery"</span>&gt;点我&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">    document.getElementById('id');</span></span><br><span class="line"><span class="regexp">	</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/选择器就是CSS选择器</span></span><br><span class="line"><span class="regexp">$('#text-jquery').click(function()&#123;</span></span><br><span class="line"><span class="regexp">    alert('hello,jquery');</span></span><br><span class="line"><span class="regexp">&#125;)</span></span><br></pre></td></tr></table></figure>

<p>选择器</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="comment">//原生JS，选择器少，麻烦不好记</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//标签</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementsByTagName();</span></span><br><span class="line"><span class="actionscript">	<span class="comment">//id</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">document</span>.getElementsById();</span></span><br><span class="line"><span class="actionscript">	<span class="comment">//类</span></span></span><br><span class="line"><span class="javascript">	<span class="built_in">document</span>.getElementsByClassName();</span></span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line"><span class="actionscript">  <span class="comment">//JQuery  css  中的选择器他全部都能用</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'p'</span>).click();<span class="comment">//标签选择器</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#id1'</span>).click();<span class="comment">//id选择器</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'.class'</span>).click();<span class="comment">//class选择器</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>文档工具站：<a href="https://jquery.cuishifeng.cn/" target="_blank" rel="noopener">https://jquery.cuishifeng.cn/</a></p>
<blockquote>
<p>事件</p>
</blockquote>
<ul>
<li>鼠标事件</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//按下</span></span><br><span class="line">mousedown()(JQuery)</span><br><span class="line"><span class="comment">//离开</span></span><br><span class="line">mouseleave()(JQuery)</span><br><span class="line"><span class="comment">//移动</span></span><br><span class="line">mousemove()(JQuery)</span><br><span class="line"><span class="comment">//点击结束</span></span><br><span class="line">mouseover()(JQuery)</span><br></pre></td></tr></table></figure>



<ul>
<li>键盘事件</li>
<li>其他事件</li>
</ul>
<h3 id="操作DOM元素"><a href="#操作DOM元素" class="headerlink" title="操作DOM元素"></a>操作DOM元素</h3><p>节点文本操作</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'#test-ul li[name=python]'</span>).text();<span class="comment">//获得值</span></span><br><span class="line">$(<span class="string">'#test-ul li[name-python]'</span>).text(<span class="string">'设置值'</span>)；<span class="comment">//设置值</span></span><br><span class="line">$(<span class="string">'#test-ul'</span>).html();  <span class="comment">//获得值</span></span><br><span class="line">$(<span class="string">'#test-ul'</span>).html(<span class="string">'设置值'</span>)  <span class="comment">//设置值</span></span><br></pre></td></tr></table></figure>

<p>CSS的操作</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'#test-ul li[name=python]'</span>).css(&#123;<span class="string">"color"</span>,<span class="string">"red"</span>&#125;)</span><br></pre></td></tr></table></figure>

<p>元素的显示和隐藏：本质 display:none</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'#test-ul li[name=python]'</span>).show()</span><br><span class="line">$(<span class="string">'#test-ul li[name=python]'</span>).hide()</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis框架</title>
    <url>/Mr-lee-MQ.hithub.io/2020/05/27/Mybatis%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<h1 id="MyBatis框架"><a href="#MyBatis框架" class="headerlink" title="MyBatis框架"></a>MyBatis框架<a id="more"></a></h1><p>​            mybatis通过XML或注解的方式将要执行的各种statement配置起来，并通过java对象和statement中的sql的动态参数进行映射生成最终执行的sql语句，最后由mybatis框架执行sql并将结果映射为java对象并返回。</p>
<p>​            采用ORM思想解决了实体与数据库映射的问题，对JDBC进行了封装。</p>
<ul>
<li>ORM：（对象关系映射）就是把数据库表和实体类的属性对应起来，让我们可以操作实体类实现操作数据库表。</li>
</ul>
<h2 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h2><ul>
<li>表现层:　 用于展示数据</li>
<li>业务层: 　用于处理业务需求</li>
<li>持久层: 　是和数据交互的</li>
</ul>
<h2 id="持久层技术解决方案"><a href="#持久层技术解决方案" class="headerlink" title="持久层技术解决方案"></a>持久层技术解决方案</h2><h3 id="JDBC技术"><a href="#JDBC技术" class="headerlink" title="JDBC技术"></a>JDBC技术</h3><p>　　　　　　Connection<br>　　　　　　PreparedStatemnet<br>　　　　　　ResultSet</p>
<h3 id="Spring-的JdbcTemplate："><a href="#Spring-的JdbcTemplate：" class="headerlink" title="Spring 的JdbcTemplate："></a>Spring 的JdbcTemplate：</h3><p>　　Spring中对JDBC的简单封装</p>
<h3 id="Apache的DBUtils："><a href="#Apache的DBUtils：" class="headerlink" title="Apache的DBUtils："></a>Apache的DBUtils：</h3><p>　　它和Spring的 jdbcTemplate 很像，也是对JDBC的简单封装</p>
<h3 id="持久层"><a href="#持久层" class="headerlink" title="持久层"></a>持久层</h3><p>数据持久化</p>
<ul>
<li>持久化就是将程序的数据在持久状态和瞬间状态转化的过程</li>
<li>内存：<strong>断电即失</strong></li>
<li>数据库（jdbc），io文件持久化。</li>
</ul>
<p>持久层</p>
<p>Dao层，Service层，Controller层</p>
<ul>
<li>完成持久化工作的代码块</li>
<li>层界限十分明显</li>
</ul>
<h2 id="JDBC编程分析"><a href="#JDBC编程分析" class="headerlink" title="JDBC编程分析"></a>JDBC编程分析</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;    </span><br><span class="line">                  <span class="comment">//数据库连接</span></span><br><span class="line">			Connection connection = <span class="keyword">null</span>;  </span><br><span class="line">                 <span class="comment">//预编译的Statement</span></span><br><span class="line">			PreparedStatement preparedStatement = <span class="keyword">null</span>;    </span><br><span class="line">			ResultSet resultSet = <span class="keyword">null</span>;    </span><br><span class="line">    <span class="keyword">try</span> &#123;     <span class="comment">//加载数据库驱动    					  				  </span></span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>); <span class="comment">//通过驱动管理类获取数据库链接     </span></span><br><span class="line">        connection =  DriverManager </span><br><span class="line">.getConnection(<span class="string">"jdbc:mysql://localhost:3306/mybatis?characterEncoding=utf-8"</span>,<span class="string">"root"</span>, <span class="string">"mysql"</span>);   <span class="comment">//用户名密码</span></span><br><span class="line">    						<span class="comment">//定义 sql 语句 ?表示占位符    </span></span><br><span class="line">        String sql = <span class="string">"select * from user where username = ?"</span>; </span><br><span class="line">                          <span class="comment">//获取预处理 statement     </span></span><br><span class="line">        preparedStatement = connection.prepareStatement(sql); </span><br><span class="line">                         <span class="comment">//设置参数，第一个参数为 sql 语句中参数的序号（从 1 开始），第二个参数为设置的 参数值        </span></span><br><span class="line">        preparedStatement.setString(<span class="number">1</span>, <span class="string">"王五"</span>);     </span><br><span class="line">                         <span class="comment">//向数据库发出 sql 执行查询，查询出结果集     </span></span><br><span class="line">        resultSet =  preparedStatement.executeQuery(); </span><br><span class="line">                          <span class="comment">//遍历查询结果集     </span></span><br><span class="line">        <span class="keyword">while</span>(resultSet.next())&#123;              				                         System.out.println(resultSet.getString(<span class="string">"id"</span>)+<span class="string">"                              "</span>+resultSet.getString(<span class="string">"username"</span>));     </span><br><span class="line">              &#125;   </span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;     </span><br><span class="line">        e.printStackTrace(); </span><br><span class="line">   &#125;<span class="keyword">finally</span>&#123;     </span><br><span class="line">        <span class="comment">//释放资源     </span></span><br><span class="line">        <span class="keyword">if</span>(resultSet!=<span class="keyword">null</span>)&#123;      </span><br><span class="line">            <span class="keyword">try</span> &#123;       resultSet.close(); </span><br><span class="line">     		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;     </span><br><span class="line">        &#125;     </span><br><span class="line">        <span class="keyword">if</span>(preparedStatement!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;       </span><br><span class="line">                preparedStatement.close();      </span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace(); </span><br><span class="line">            &#125;     </span><br><span class="line">        &#125;     </span><br><span class="line">        <span class="keyword">if</span>(connection!=<span class="keyword">null</span>)&#123;      </span><br><span class="line">            <span class="keyword">try</span> &#123;       </span><br><span class="line">                connection.close();      </span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                <span class="comment">// TODO Auto-generated catch block       </span></span><br><span class="line">                e.printStackTrace();      &#125; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line">上边使用 jdbc 的原始方法（未经封装）实现了查询数据库表记录的操作。</span><br></pre></td></tr></table></figure>

<h2 id="原生JDBC的问题"><a href="#原生JDBC的问题" class="headerlink" title="原生JDBC的问题"></a>原生JDBC的问题</h2><ol>
<li>数据库连接，使用时就创建，不使用就立即释放，对数据库进行频繁的连接开启和关闭，造成数据库资源浪费，影响数据库性能。</li>
</ol>
<p>​       解决方案：使用数据库连接池管理数据库连接。</p>
<ol start="2">
<li><p>将sql语句硬编码到java中，如果sql语句修改，需要重新编译java代码，不利于系统维护。</p>
<p>解决方案： 将sql语句配置到xml文件中，即使sql变化，不需要对java代码进行重新编译。</p>
</li>
</ol>
<h2 id="Mybatis的概述"><a href="#Mybatis的概述" class="headerlink" title="Mybatis的概述"></a>Mybatis的概述</h2><p>​    Mybatis是一个持久层框架，用java编写。</p>
<p>​    它封装了jdbc操作的很多细节，使开发者只需要关注sql语句本身，而无需关注注册驱动，创建链接等繁杂过程。</p>
<p>​    它使用了ORM思想，实现了结果集的封装</p>
<p>​        ORM：</p>
<p>​                    Object Relational Mappging 对象关系映射</p>
<p>​        简单的说：</p>
<p>​                    就是把数据库表和实体类及实体类的的属性对应起来</p>
<p>​                    让我们可以操作实体类就实现操作数据库</p>
<h2 id="Mybatis实现的基本原理"><a href="#Mybatis实现的基本原理" class="headerlink" title="Mybatis实现的基本原理"></a>Mybatis实现的基本原理</h2><ul>
<li>应用程序找Mybatis要数据</li>
<li>mybatis从数据库中找来数据<ul>
<li>通过mybatis-config.xml 定位哪个数据库</li>
<li>通过Category.xml执行对应的select语句</li>
<li>基于Category.xml把返回的数据库记录封装在Category对象中</li>
<li>把多个Category对象装在一个Category集合中</li>
</ul>
</li>
<li>返回一个Category集合</li>
</ul>
<h2 id="Mybatis框架流程"><a href="#Mybatis框架流程" class="headerlink" title="Mybatis框架流程"></a>Mybatis框架流程</h2><ul>
<li>sqlMapConfig.xml(是mybatis的全局配置文件)配置了数据源，事务等mybatis运行环境，配置了映射文件（配置sql语句）mapper.xml(映射文件)，mapper.xml，mapper.xml………</li>
<li>sqlSessionFactory（会话工厂），根据配置文件创建工厂     作用：创建sqlsession。</li>
<li>sqlSession（会话），是一个接口，面向（程序员）的接口    作用：操作数据库（发出sql增删改查）</li>
<li>Executor（执行器），也是一个接口（基本执行器，缓存执行器）   作用：sqlsession内部通过执行器操作数据库</li>
</ul>
<h2 id="Mybatis的入门"><a href="#Mybatis的入门" class="headerlink" title="Mybatis的入门"></a>Mybatis的入门</h2><ul>
<li><p>在pom.xml文件中写入打包方式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;packaging&gt;jar&lt;&#x2F;packaging&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>mybatis官网复制依赖代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.mybatis&lt;&#x2F;groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;mybatis&lt;&#x2F;artifactId&gt;</span><br><span class="line">  &lt;version&gt;x.x.x&lt;&#x2F;version&gt;		版本号</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>官网下载Mybatis框架</p>
</li>
<li><p>创建maven工程</p>
</li>
<li><p>在pom.xml文件中添加Mybatis的坐标</p>
</li>
</ul>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependencies&gt;    </span><br><span class="line">	&lt;dependency&gt;     </span><br><span class="line">		&lt;groupId&gt;org.mybatis&lt;&#x2F;groupId&gt;</span><br><span class="line">		&lt;artifactId&gt;mybatis&lt;&#x2F;artifactId&gt;      </span><br><span class="line">		&lt;version&gt;3.4.5&lt;&#x2F;version&gt;</span><br><span class="line">	&lt;&#x2F;dependency&gt;    </span><br><span class="line">	&lt;dependency&gt;     </span><br><span class="line">		&lt;groupId&gt;junit&lt;&#x2F;groupId&gt;   单元测试</span><br><span class="line">		&lt;artifactId&gt;junit&lt;&#x2F;artifactId&gt;</span><br><span class="line">		&lt;version&gt;4.10&lt;&#x2F;version&gt;</span><br><span class="line">		&lt;scope&gt;test&lt;&#x2F;scope&gt;    </span><br><span class="line">	&lt;&#x2F;dependency&gt;    </span><br><span class="line">	&lt;dependency&gt;     </span><br><span class="line">		&lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;     </span><br><span class="line">		&lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;     						&lt;version&gt;5.1.6&lt;&#x2F;version&gt;     </span><br><span class="line">		&lt;scope&gt;runtime&lt;&#x2F;scope&gt;    </span><br><span class="line">	&lt;&#x2F;dependency&gt;    </span><br><span class="line">	&lt;dependency&gt;     </span><br><span class="line">		&lt;groupId&gt;log4j&lt;&#x2F;groupId&gt;  日志   </span><br><span class="line">		&lt;artifactId&gt;log4j&lt;&#x2F;artifactId&gt;    </span><br><span class="line">        &lt;version&gt;1.2.12&lt;&#x2F;version&gt;    </span><br><span class="line">	&lt;&#x2F;dependency&gt;   </span><br><span class="line">&lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure>









<p>​     </p>
]]></content>
      <tags>
        <tag>框架</tag>
      </tags>
  </entry>
  <entry>
    <title>maven项目管理</title>
    <url>/Mr-lee-MQ.hithub.io/2020/05/30/maven%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h1 id="Maven项目管理"><a href="#Maven项目管理" class="headerlink" title="Maven项目管理"></a>Maven项目管理<a id="more"></a></h1><h2 id="为什么使用Maven？"><a href="#为什么使用Maven？" class="headerlink" title="为什么使用Maven？"></a>为什么使用Maven？</h2><ul>
<li><p>jar包管理</p>
<ul>
<li>从Maven中央仓库获取标准的规范的jar包以及相关依赖的jar包，避免自己下载到错误的jar包。</li>
<li>本地仓库统一管理jar包，使得jar包与项目分离，减轻项目体积。</li>
</ul>
</li>
<li><p>Maven是跨平台的可以在window、linux上使用。</p>
</li>
<li><p>清晰的项目结构</p>
</li>
<li><p>多工程开发，将模块拆分成若干个工程，利于团队协作开发。</p>
</li>
<li><p>一键构建项目：使用命令行可以对项目进行一键构建，操作系统中无需安装eclipse和tomcat。</p>
<h2 id="Maven入门"><a href="#Maven入门" class="headerlink" title="Maven入门"></a>Maven入门</h2></li>
<li><p>下载，安装，配置环境变量Maven；</p>
<ul>
<li><a href="https://maven.apache.org/download.cgi" target="_blank" rel="noopener">https://maven.apache.org/download.cgi</a>     下载后解压，放到工作目录下。<ul>
<li>bin：配置文件，脚本</li>
<li>boot：类加载器的框架</li>
<li>conf：配置文件     sttings.xml主要用到的配置文件（全局配置）</li>
<li>lib：库文件</li>
</ul>
</li>
<li><img src="http://s1.wailian.download/2020/06/10/image-20200530172929530.png" alt="image-20200530172929530.png"></li>
</ul>
</li>
<li><p>变量值Maven安装路径到bin目录之前</p>
</li>
</ul>
<h2 id="Maven的优点"><a href="#Maven的优点" class="headerlink" title="Maven的优点"></a>Maven的优点</h2><ul>
<li><p>jar包管理</p>
<ul>
<li><p>从Maven中央仓库获取标准的规范的jar包以及相关依赖的jar包，避免自己下载到错误的jar包。</p>
</li>
<li><p>本地仓库统一管理jar包，使得jar包与项目分离，减轻项目体积。</p>
</li>
<li><p>Maven项目通过坐标的方式从本地仓库获取jar包</p>
<ul>
<li><p>坐标：由公司/组织名（groupld）+ 项目名/子项目名（artifactld）+版本号（version）组成。</p>
</li>
<li><p>本地仓库：存放了很多Jar包，供Maven项目使用。</p>
</li>
<li><p>Maven通过建立本地仓库索引，可以快速的找到符合要求的jar包，从而解决效率问题。</p>
</li>
<li><p>多个Maven项目都可以从本地仓库获取jar包</p>
</li>
<li><p>设置本地仓库：Maven根目录—–conf—-settings.xml，将localRepository标签中的路径替换成自己本地仓库的路径····</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">localRepository&gt;&#x2F;path&#x2F;to&#x2F;local&#x2F;repo&lt;&#x2F;localRepository&gt;</span><br></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Maven三中仓库概念"><a href="#Maven三中仓库概念" class="headerlink" title="Maven三中仓库概念"></a>Maven三中仓库概念</h2><p>本地仓库，远程仓库，中央仓库</p>
<p><a href="https://www.wailian.work/image/AjEarS" target="_blank" rel="noopener"><img src="http://s1.wailian.download/2020/06/10/image-20200530175433411.png" alt="image-20200530175433411.png"></a></p>
<ul>
<li>中央仓库（MVN）<a href="https://mvnrepository.com/" target="_blank" rel="noopener">https://mvnrepository.com/</a></li>
</ul>
<p>优先级：本地—–远程—–中央                本地仓库没有也没有远程仓库，则直接去中央仓库找。</p>
<h2 id="设置阿里云Maven仓库镜像"><a href="#设置阿里云Maven仓库镜像" class="headerlink" title="设置阿里云Maven仓库镜像"></a>设置阿里云Maven仓库镜像</h2><ul>
<li>在settings.xml文件中的mirrors下添加mirror标签</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;mirror&gt;</span><br><span class="line"></span><br><span class="line">&lt;id&gt;alimaven&lt;&#x2F;id&gt;</span><br><span class="line"></span><br><span class="line">&lt;name&gt;aliyun maven&lt;&#x2F;name&gt;</span><br><span class="line"></span><br><span class="line">&lt;url&gt;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;&lt;&#x2F;url&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirrorOf&gt;central&lt;&#x2F;mirrorOf&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br></pre></td></tr></table></figure>



<ul>
<li>maven是由纯java开发，是跨平台的可以在window，linux，mac上使用</li>
<li>清晰的项目结构</li>
<li>使用Maven将大型项目按照模块拆分成若干工程，不同的团队维护各自的工程，可大大的提升开发效率。<ul>
<li>大型商城项目按业务分成商品管理，用户管理，订单管理等模块</li>
<li>中小型项目按照传统项目分为Web，Service，Dao层，依照员工的业务能力分配工作</li>
</ul>
</li>
</ul>
<h2 id="Maven常用命令"><a href="#Maven常用命令" class="headerlink" title="Maven常用命令"></a>Maven常用命令</h2><ul>
<li><p>mvn       命令（在工程目录下）</p>
</li>
<li><p>clean            清理</p>
</li>
<li><p>compile          编译，只编译main文件，不编译test中的代码（记得常clean）</p>
</li>
<li><p>test-compile    编译test目录中的代码 </p>
</li>
<li><p>package     打包           打包完的名字是由pom.xml中的(artifactId——version—-packaging)决定的</p>
<ul>
<li>Java项目—–打成jar包          </li>
<li>web项目—–打成war包</li>
</ul>
</li>
<li><p>install：    发布项目到本地仓库，用在打jar包上，打成jar包可以被其他项目使用</p>
</li>
<li><p>tomcat：run：    一键构建项目</p>
</li>
</ul>
<h2 id="Maven的生命周期"><a href="#Maven的生命周期" class="headerlink" title="Maven的生命周期"></a>Maven的生命周期</h2><ul>
<li>Clean       生命周期：clean</li>
<li>Default      生命周期：compile，test-compile，test，package，install</li>
<li>Silt              生命周期：site命令，生成项目描述文档静态页</li>
<li>不同的生命周期可以一起执行，例如先clean再compile</li>
</ul>
<h2 id="Maven命令的执行顺序"><a href="#Maven命令的执行顺序" class="headerlink" title="Maven命令的执行顺序"></a>Maven命令的执行顺序</h2><ul>
<li>在相同生命周期中的命令才会受执行顺序的影响</li>
<li>Default生命周期中的命令执行顺序：<ul>
<li>compile&lt;—test-compile&lt;—test&lt;—package&lt;—install</li>
</ul>
</li>
</ul>
<h2 id="Maven入门程序"><a href="#Maven入门程序" class="headerlink" title="Maven入门程序"></a>Maven入门程序</h2><ul>
<li><p>创建Maven项目</p>
</li>
<li><p><a href="https://www.wailian.work/image/AjEdI8" target="_blank" rel="noopener"><img src="http://s1.wailian.download/2020/06/10/image-20200531132200007.png" alt="image-20200531132200007.png"></a></p>
</li>
<li><p><a href="https://www.wailian.work/image/AjE28B" target="_blank" rel="noopener"><img src="http://s1.wailian.download/2020/06/10/image-20200531132333105.png" alt="image-20200531132333105.png"></a></p>
</li>
<li><p><a href="https://www.wailian.work/image/AjE9a0" target="_blank" rel="noopener"><img src="http://s1.wailian.download/2020/06/10/image-20200531132454709.png" alt="image-20200531132454709.png"></a></p>
</li>
<li><p><a href="https://www.wailian.work/image/AjEW5l" target="_blank" rel="noopener"><img src="http://s1.wailian.download/2020/06/10/image-20200531132531764.png" alt="image-20200531132531764.png"></a></p>
</li>
<li><p><a href="https://www.wailian.work/image/AjEN5b" target="_blank" rel="noopener"><img src="http://s1.wailian.download/2020/06/10/image-20200531115832479.png" alt="image-20200531115832479.png"></a></p>
</li>
<li><p><img src="http://s1.wailian.download/2020/06/10/sp200610_113715.png" alt="sp200610_113715.png"></p>
</li>
</ul>
<ul>
<li><p>在src—&gt;main–&gt;webapp下创建WEB-INF目录，并在目录下创建web.xml</p>
</li>
<li><p>修改Maven默认编译级别</p>
<ul>
<li>全局编译级别–&gt;修改settings.xml</li>
<li>项目级别修改–&gt;项目对应的pox.xml</li>
</ul>
</li>
<li><p>在Java Resourcese -&gt; src/main/java下写代码，创建包和Servlet；</p>
</li>
<li><p>添加servlet-api</p>
</li>
<li><p>在servlet-api中添加scope标签，值为：proviede；</p>
<ul>
<li>如果不加此标签有很大几率报错，因为tomcat中也有servlet-api的包导致冲突；</li>
</ul>
</li>
<li><p>运行：发生错误，原因是maven默认使用tomcat6.xx，不支持@WebServle注解；</p>
<ul>
<li>解决方案1：需要去web.xml中配置Servlet;</li>
<li>解决方案2：配置高版本tomcat插件；</li>
</ul>
</li>
<li><p>最后测试，启动服务，在地址栏输入请求，显示结果；</p>
</li>
<li><p>报错可以更新Maven</p>
</li>
</ul>
<h2 id="IDEA-Maven设置"><a href="#IDEA-Maven设置" class="headerlink" title="IDEA Maven设置"></a>IDEA Maven设置</h2><ul>
<li><p>下载与配置Maven</p>
</li>
<li><p>建立Maven本地仓库</p>
</li>
<li><p>IDEA设置：</p>
<p>File-&gt;Settings-&gt;Build, Execute, Deployment-&gt;Build Tools-&gt;Maven<br>修改 Maven home directory: d:/software/apache-maven-3.5.0<br>修改 User settings file: D:\software\apache-maven-3.5.0\conf\settings.xml<br>Local repository 会被自动识别为 d:\maven\repository</p>
</li>
<li><p>新建项目</p>
<ul>
<li>左边选择Maven</li>
<li>勾选Create from archetype</li>
<li>选择org.apache.maven.archetypes:maven-archetype-quickstart</li>
<li>Maven项目创建后，IDEA还会做一些初始化的工作，那么需要点击右下角的 Import Changes</li>
</ul>
</li>
<li><p>Idea Maven增加Jar</p>
<ul>
<li>修改pom.xml</li>
<li><img src="http://s1.wailian.download/2020/06/10/5761.png" alt="5761.png"></li>
<li>在修改了pom.xml之后，IDEA上会弹出这么一个 Maven projects need to be imported，点击Import Changes</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>网站及软件推荐</title>
    <url>/Mr-lee-MQ.hithub.io/2020/08/03/%E7%BD%91%E7%AB%99%E5%8F%8A%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<h1 id="网站及软件推荐"><a href="#网站及软件推荐" class="headerlink" title="网站及软件推荐"></a>网站及软件推荐<a id="more"></a></h1><h2 id="影视类"><a href="#影视类" class="headerlink" title="影视类"></a>影视类</h2><blockquote>
<p>4K屋</p>
</blockquote>
<p><a href="http://www.kkkkwo.com/tv/" target="_blank" rel="noopener">http://www.kkkkwo.com/tv/</a>        </p>
<p>加载速度快，有广告。</p>
<blockquote>
<p>上上影视</p>
</blockquote>
<p><a href="https://www.33mov.com/" target="_blank" rel="noopener">https://www.33mov.com/</a>     </p>
<p>加载速度快，有广告</p>
<blockquote>
<p>茶杯狐</p>
</blockquote>
<p><a href="https://www.cupfox.com/" target="_blank" rel="noopener">https://www.cupfox.com/</a>    </p>
<p> 搜索引擎，大部分国内外影视。加载速度快慢以及有无广告视主网站而定           </p>
<h2 id="资源搜索类"><a href="#资源搜索类" class="headerlink" title="资源搜索类"></a>资源搜索类</h2><blockquote>
<p>西林街搜索</p>
</blockquote>
<p><a href="https://xilinjie.cc/" target="_blank" rel="noopener">https://xilinjie.cc/</a>    </p>
<p>主要是 视频，书库，学术，慕课，开发者几个板块</p>
<blockquote>
<p>小不点搜索</p>
</blockquote>
<p><a href="https://www.xiaoso.net/" target="_blank" rel="noopener">https://www.xiaoso.net/</a></p>
<p>微盘资源搜索引擎</p>
<blockquote>
<p>盘搜啦</p>
</blockquote>
<p><a href="http://www.pansoula.com/" target="_blank" rel="noopener">http://www.pansoula.com/</a></p>
<p>网盘搜索引擎</p>
<blockquote>
<p>虫部落</p>
</blockquote>
<p><a href="https://search.chongbuluo.com/" target="_blank" rel="noopener">https://search.chongbuluo.com/</a></p>
<p>包罗各种搜索引擎</p>
<h2 id="博客论坛类"><a href="#博客论坛类" class="headerlink" title="博客论坛类"></a>博客论坛类</h2><blockquote>
<p>CSDN</p>
</blockquote>
<p><a href="https://www.csdn.net/" target="_blank" rel="noopener">https://www.csdn.net/</a></p>
<p>面向百度编程成员之一</p>
<blockquote>
<p>博客园</p>
</blockquote>
<p><a href="https://www.cnblogs.com/" target="_blank" rel="noopener">https://www.cnblogs.com/</a></p>
<p>面向百度编程成员之一</p>
<blockquote>
<p>github</p>
</blockquote>
<p><a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></p>
<p>代码托管平台，大量的开源项目及入门项目</p>
<blockquote>
<p>码云</p>
</blockquote>
<p><a href="https://gitee.com/" target="_blank" rel="noopener">https://gitee.com/</a></p>
<p>国内的github，访问速度快</p>
<blockquote>
<p>开源中国</p>
</blockquote>
<p><a href="https://www.oschina.net/" target="_blank" rel="noopener">https://www.oschina.net/</a></p>
<p>中文开源技术交流社区</p>
<blockquote>
<p>思否</p>
</blockquote>
<p><a href="https://segmentfault.com/" target="_blank" rel="noopener">https://segmentfault.com/</a></p>
<p>没整明白是啥，资料太深了</p>
<blockquote>
<p>电子发烧友</p>
</blockquote>
<p><a href="http://bbs.elecfans.com/" target="_blank" rel="noopener">http://bbs.elecfans.com/</a></p>
<p>电子论坛</p>
<h2 id="学习教程类"><a href="#学习教程类" class="headerlink" title="学习教程类"></a>学习教程类</h2><blockquote>
<p>C语言中文网</p>
</blockquote>
<p><a href="http://c.biancheng.net/" target="_blank" rel="noopener">http://c.biancheng.net/</a></p>
<p>C语言竟然还可以写游戏</p>
<blockquote>
<p>菜鸟教程</p>
</blockquote>
<p><a href="https://www.runoob.com/" target="_blank" rel="noopener">https://www.runoob.com/</a></p>
<p>前后端语言及技术栈教程</p>
<blockquote>
<p>W3chool</p>
</blockquote>
<p><a href="https://www.w3school.com.cn/index.html" target="_blank" rel="noopener">https://www.w3school.com.cn/index.html</a></p>
<p>前后端语言及技术栈教程</p>
<blockquote>
<p>How2J</p>
</blockquote>
<p><a href="https://how2j.cn/" target="_blank" rel="noopener">https://how2j.cn/</a></p>
<p>前后端语言及技术栈教程</p>
<blockquote>
<p>牛客网</p>
</blockquote>
<p><a href="https://www.nowcoder.com/" target="_blank" rel="noopener">https://www.nowcoder.com/</a></p>
<p>面试刷题必备</p>
<blockquote>
<p>力扣</p>
</blockquote>
<p><a href="https://leetcode-cn.com/" target="_blank" rel="noopener">https://leetcode-cn.com/</a></p>
<p>面试刷题必备</p>
<h2 id="工具资料类"><a href="#工具资料类" class="headerlink" title="工具资料类"></a>工具资料类</h2><blockquote>
<p>极简Polebrief</p>
</blockquote>
<p><a href="https://www.polebrief.com/index" target="_blank" rel="noopener">https://www.polebrief.com/index</a></p>
<p>免费在线简历制作平台</p>
<blockquote>
<p>迅捷PDF转换器</p>
</blockquote>
<p><a href="https://app.xunjiepdf.com/zh-cn/pdfdecode/" target="_blank" rel="noopener">https://app.xunjiepdf.com/zh-cn/pdfdecode/</a></p>
<p>在线PDF转换器，限制文件大小</p>
<blockquote>
<p>极简壁纸</p>
</blockquote>
<p><a href="https://bz.zzzmh.cn/" target="_blank" rel="noopener">https://bz.zzzmh.cn/</a></p>
<p>免费下载高清壁纸</p>
<blockquote>
<p>Apowersoft</p>
</blockquote>
<p><a href="https://www.apowersoft.cn/free-online-audio-editor" target="_blank" rel="noopener">https://www.apowersoft.cn/free-online-audio-editor</a></p>
<p>免费在线音频剪辑</p>
<blockquote>
<p>迅捷视频</p>
</blockquote>
<p><a href="https://www.xunjieshipin.com/online-converter" target="_blank" rel="noopener">https://www.xunjieshipin.com/online-converter</a></p>
<p>免费在线视频剪辑及格式转换</p>
<blockquote>
<p>源码之家</p>
</blockquote>
<p><a href="https://www.mycodes.net/" target="_blank" rel="noopener">https://www.mycodes.net/</a></p>
<p>复制粘贴一把嗦</p>
<blockquote>
<p>模板之家</p>
</blockquote>
<p><a href="http://www.cssmoban.com/" target="_blank" rel="noopener">http://www.cssmoban.com/</a></p>
<p>复制粘贴一把嗦</p>
<blockquote>
<p>ProcessOn</p>
</blockquote>
<p><a href="https://www.processon.com/" target="_blank" rel="noopener">https://www.processon.com/</a></p>
<p>在线作图工具</p>
<blockquote>
<p>外链工厂</p>
</blockquote>
<p><a href="https://www.wailian.work/" target="_blank" rel="noopener">https://www.wailian.work/</a></p>
<p>免费无限外链相册</p>
<blockquote>
<p>吾爱破解网</p>
</blockquote>
<p><a href="https://www.52pojie.cn/" target="_blank" rel="noopener">https://www.52pojie.cn/</a></p>
<p>我最爱的网站</p>
<blockquote>
<p>当下软件园</p>
</blockquote>
<p><a href="http://www.downxia.com/" target="_blank" rel="noopener">http://www.downxia.com/</a></p>
<p>软件下载站</p>
<h2 id="软件推荐"><a href="#软件推荐" class="headerlink" title="软件推荐"></a>软件推荐</h2><blockquote>
<p>Bandzip</p>
</blockquote>
<p><img src="/Mr-lee-MQ.hithub.io/Mr-lee-MQ.hithub.io/2020/08/03/%E7%BD%91%E7%AB%99%E5%8F%8A%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/image-20200803222730589.png" alt="image-20200803222730589"></p>
<p>没有广告的解压工具</p>
<blockquote>
<p>冰点下载器</p>
</blockquote>
<p><img src="/Mr-lee-MQ.hithub.io/Mr-lee-MQ.hithub.io/2020/08/03/%E7%BD%91%E7%AB%99%E5%8F%8A%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/image-20200803223014824.png" alt="image-20200803223014824"></p>
<p>用于免费下载百度文库里的付费文章</p>
<blockquote>
<p>XMind</p>
</blockquote>
<p><img src="/Mr-lee-MQ.hithub.io/Mr-lee-MQ.hithub.io/2020/08/03/%E7%BD%91%E7%AB%99%E5%8F%8A%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/image-20200803223124772.png" alt="image-20200803223124772"></p>
<p>思维导图制作工具</p>
<blockquote>
<p>PanDownload</p>
</blockquote>
<p><img src="/Mr-lee-MQ.hithub.io/Mr-lee-MQ.hithub.io/2020/08/03/%E7%BD%91%E7%AB%99%E5%8F%8A%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/image-20200803223211553.png" alt="image-20200803223211553"></p>
<p>免费百度网盘下载工具</p>
<blockquote>
<p>Bypass</p>
</blockquote>
<p><img src="/Mr-lee-MQ.hithub.io/Mr-lee-MQ.hithub.io/2020/08/03/%E7%BD%91%E7%AB%99%E5%8F%8A%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/image-20200803223335814.png" alt="image-20200803223335814"></p>
<p>抢车票专用</p>
<blockquote>
<p>PDF Candy Desktop PRO</p>
</blockquote>
<p><img src="/Mr-lee-MQ.hithub.io/Mr-lee-MQ.hithub.io/2020/08/03/%E7%BD%91%E7%AB%99%E5%8F%8A%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/image-20200803223458599.png" alt="image-20200803223458599"></p>
<p>PDF转换工具，免费，无文件大小限制</p>
<blockquote>
<p>洛雪音乐助手</p>
</blockquote>
<p><img src="/Mr-lee-MQ.hithub.io/Mr-lee-MQ.hithub.io/2020/08/03/%E7%BD%91%E7%AB%99%E5%8F%8A%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/image-20200803223659802.png" alt="image-20200803223659802"></p>
<p>免费音乐下载器</p>
<blockquote>
<p>SpeedPanX</p>
</blockquote>
<p><img src="/Mr-lee-MQ.hithub.io/Mr-lee-MQ.hithub.io/2020/08/03/%E7%BD%91%E7%AB%99%E5%8F%8A%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/image-20200803223922785.png" alt="image-20200803223922785"></p>
<p>付费百度网盘下载工具，便宜且速度超快</p>
<blockquote>
<p>Snipaste_latest</p>
</blockquote>
<p><img src="/Mr-lee-MQ.hithub.io/Mr-lee-MQ.hithub.io/2020/08/03/%E7%BD%91%E7%AB%99%E5%8F%8A%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/image-20200803224051434.png" alt="image-20200803224051434"></p>
<p>小巧的截图工具</p>
<blockquote>
<p>TakeColor</p>
</blockquote>
<p><img src="/Mr-lee-MQ.hithub.io/Mr-lee-MQ.hithub.io/2020/08/03/%E7%BD%91%E7%AB%99%E5%8F%8A%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/image-20200803224226609.png" alt="image-20200803224226609"></p>
<p>取色器</p>
<blockquote>
<p>Typora</p>
</blockquote>
<p><a href="https://www.wailian.work/image/DAZ08q" target="_blank" rel="noopener"><img src="http://s1.wailian.download/2020/08/04/image-20200803224300409.png" alt="image-20200803224300409.png"></a></p>
<p>简洁方便的Markdown编辑工具</p>
]]></content>
  </entry>
</search>
